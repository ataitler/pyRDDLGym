non-fluents grid_2x2 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3};
        link         : {l-i0-s0, l-i0-i1, l-i0-i2, l-i0-s7, l-i1-s1, l-i1-s2, l-i1-i3, l-i1-i0, l-i2-i0, l-i2-i3, l-i2-s5, l-i2-s6, l-i3-i1, l-i3-s3, l-i3-s4, l-i3-i2, l-s0-i0, l-s5-i2, l-s1-i1, l-s4-i3, l-s7-i0, l-s2-i1, l-s6-i2, l-s3-i3};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27};
    };

    non-fluents {
        //sources
        SOURCE(l-s7-i0);
        SOURCE(l-s2-i1);
        SOURCE(l-s6-i2);
        SOURCE(l-s3-i3);
        SOURCE(l-s0-i0);
        SOURCE(l-s5-i2);
        SOURCE(l-s1-i1);
        SOURCE(l-s4-i3);
        //sinks
        SINK(l-i0-s7);
        SINK(l-i1-s2);
        SINK(l-i2-s6);
        SINK(l-i3-s3);
        SINK(l-i0-s0);
        SINK(l-i2-s5);
        SINK(l-i1-s1);
        SINK(l-i3-s4);
        //satflow rates
        MU(l-s7-i0,l-i0-i1) = 1.06;
        MU(l-s7-i0,l-i0-s0) = 0.636;
        MU(l-s7-i0,l-i0-i2) = 0.42400000000000004;
        MU(l-i1-i0,l-i0-s7) = 1.06;
        MU(l-s0-i0,l-i0-i1) = 0.636;
        MU(l-i2-i0,l-i0-i1) = 0.42400000000000004;
        MU(l-s0-i0,l-i0-i2) = 1.06;
        MU(l-i1-i0,l-i0-i2) = 0.636;
        MU(l-i1-i0,l-i0-s0) = 0.42400000000000004;
        MU(l-i2-i0,l-i0-s0) = 1.06;
        MU(l-i2-i0,l-i0-s7) = 0.636;
        MU(l-s0-i0,l-i0-s7) = 0.42400000000000004;
        MU(l-i0-i1,l-i1-s2) = 1.06;
        MU(l-i0-i1,l-i1-s1) = 0.636;
        MU(l-i0-i1,l-i1-i3) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-s2) = 1.06;
        MU(l-s2-i1,l-i1-i0) = 0.636;
        MU(l-i3-i1,l-i1-s2) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-i3) = 1.06;
        MU(l-s2-i1,l-i1-i3) = 0.636;
        MU(l-s2-i1,l-i1-s1) = 0.42400000000000004;
        MU(l-i3-i1,l-i1-s1) = 1.06;
        MU(l-i3-i1,l-i1-i0) = 0.636;
        MU(l-s1-i1,l-i1-i0) = 0.42400000000000004;
        MU(l-s6-i2,l-i2-i0) = 1.06;
        MU(l-s6-i2,l-i2-i3) = 0.636;
        MU(l-s6-i2,l-i2-s5) = 0.42400000000000004;
        MU(l-i0-i2,l-i2-i3) = 1.06;
        MU(l-i3-i2,l-i2-s6) = 0.636;
        MU(l-s5-i2,l-i2-i3) = 0.42400000000000004;
        MU(l-i0-i2,l-i2-s5) = 1.06;
        MU(l-i3-i2,l-i2-s5) = 0.636;
        MU(l-i3-i2,l-i2-i0) = 0.42400000000000004;
        MU(l-s5-i2,l-i2-s6) = 1.06;
        MU(l-s5-i2,l-i2-i0) = 0.636;
        MU(l-i0-i2,l-i2-s6) = 0.42400000000000004;
        MU(l-i2-i3,l-i3-s3) = 1.06;
        MU(l-i2-i3,l-i3-i1) = 0.636;
        MU(l-i2-i3,l-i3-s4) = 0.42400000000000004;
        MU(l-s3-i3,l-i3-i2) = 1.06;
        MU(l-i1-i3,l-i3-s3) = 0.636;
        MU(l-s4-i3,l-i3-s3) = 0.42400000000000004;
        MU(l-s3-i3,l-i3-s4) = 1.06;
        MU(l-i1-i3,l-i3-s4) = 0.636;
        MU(l-s3-i3,l-i3-i1) = 0.42400000000000004;
        MU(l-s4-i3,l-i3-i1) = 1.06;
        MU(l-s4-i3,l-i3-i2) = 0.636;
        MU(l-i1-i3,l-i3-i2) = 0.42400000000000004;
        //turn probabilities
        BETA(l-s7-i0,l-i0-i1) = 0.7963686026984523;
        BETA(l-s7-i0,l-i0-s0) = 0.10363139730154763;
        BETA(l-s7-i0,l-i0-i2) = 0.10000000000000003;
        BETA(l-i1-i0,l-i0-s7) = 0.6007245931895671;
        BETA(l-s0-i0,l-i0-i1) = 0.2992754068104329;
        BETA(l-i2-i0,l-i0-i1) = 0.10000000000000003;
        BETA(l-s0-i0,l-i0-i2) = 0.7837852313375269;
        BETA(l-i1-i0,l-i0-i2) = 0.11621476866247314;
        BETA(l-i1-i0,l-i0-s0) = 0.09999999999999999;
        BETA(l-i2-i0,l-i0-s0) = 0.6254204003052289;
        BETA(l-i2-i0,l-i0-s7) = 0.27457959969477097;
        BETA(l-s0-i0,l-i0-s7) = 0.10000000000000009;
        BETA(l-i0-i1,l-i1-s2) = 0.7833126241594143;
        BETA(l-i0-i1,l-i1-s1) = 0.11668737584058567;
        BETA(l-i0-i1,l-i1-i3) = 0.10000000000000006;
        BETA(l-s1-i1,l-i1-s2) = 0.7319758848979822;
        BETA(l-s2-i1,l-i1-i0) = 0.16802411510201778;
        BETA(l-i3-i1,l-i1-s2) = 0.10000000000000006;
        BETA(l-s1-i1,l-i1-i3) = 0.7277956655581521;
        BETA(l-s2-i1,l-i1-i3) = 0.17220433444184785;
        BETA(l-s2-i1,l-i1-s1) = 0.10000000000000003;
        BETA(l-i3-i1,l-i1-s1) = 0.6633237227873652;
        BETA(l-i3-i1,l-i1-i0) = 0.23667627721263482;
        BETA(l-s1-i1,l-i1-i0) = 0.1;
        BETA(l-s6-i2,l-i2-i0) = 0.6615664562036848;
        BETA(l-s6-i2,l-i2-i3) = 0.23843354379631515;
        BETA(l-s6-i2,l-i2-s5) = 0.10000000000000003;
        BETA(l-i0-i2,l-i2-i3) = 0.6672383109994944;
        BETA(l-i3-i2,l-i2-s6) = 0.23276168900050564;
        BETA(l-s5-i2,l-i2-i3) = 0.09999999999999998;
        BETA(l-i0-i2,l-i2-s5) = 0.7165969658762028;
        BETA(l-i3-i2,l-i2-s5) = 0.18340303412379716;
        BETA(l-i3-i2,l-i2-i0) = 0.10000000000000003;
        BETA(l-s5-i2,l-i2-s6) = 0.7581917415456654;
        BETA(l-s5-i2,l-i2-i0) = 0.14180825845433465;
        BETA(l-i0-i2,l-i2-s6) = 0.09999999999999998;
        BETA(l-i2-i3,l-i3-s3) = 0.7623255573035529;
        BETA(l-i2-i3,l-i3-i1) = 0.13767444269644702;
        BETA(l-i2-i3,l-i3-s4) = 0.10000000000000009;
        BETA(l-s3-i3,l-i3-i2) = 0.6196223835662339;
        BETA(l-i1-i3,l-i3-s3) = 0.2803776164337661;
        BETA(l-s4-i3,l-i3-s3) = 0.10000000000000003;
        BETA(l-s3-i3,l-i3-s4) = 0.6711058025826262;
        BETA(l-i1-i3,l-i3-s4) = 0.2288941974173737;
        BETA(l-s3-i3,l-i3-i1) = 0.10000000000000009;
        BETA(l-s4-i3,l-i3-i1) = 0.7540681902617298;
        BETA(l-s4-i3,l-i3-i2) = 0.1459318097382702;
        BETA(l-i1-i3,l-i3-i2) = 0.10000000000000003;
        //link lengths
        Dl(l-i0-s0) = 241.0;
        Dl(l-i0-i1) = 229.0;
        Dl(l-i0-i2) = 227.0;
        Dl(l-i0-s7) = 345.0;
        Dl(l-i1-s1) = 241.0;
        Dl(l-i1-s2) = 250.0;
        Dl(l-i1-i3) = 227.0;
        Dl(l-i1-i0) = 229.0;
        Dl(l-i2-i0) = 227.0;
        Dl(l-i2-i3) = 229.0;
        Dl(l-i2-s5) = 352.0;
        Dl(l-i2-s6) = 345.0;
        Dl(l-i3-i1) = 227.0;
        Dl(l-i3-s3) = 250.0;
        Dl(l-i3-s4) = 352.0;
        Dl(l-i3-i2) = 229.0;
        Dl(l-s0-i0) = 241.0;
        Dl(l-s5-i2) = 352.0;
        Dl(l-s1-i1) = 241.0;
        Dl(l-s4-i3) = 352.0;
        Dl(l-s7-i0) = 345.0;
        Dl(l-s2-i1) = 250.0;
        Dl(l-s6-i2) = 345.0;
        Dl(l-s3-i3) = 250.0;
        //source arrival rates
        SOURCE-ARRIVAL-RATE(l-s0-i0) = 0.33;
        SOURCE-ARRIVAL-RATE(l-s5-i2) = 0.37;
        SOURCE-ARRIVAL-RATE(l-s1-i1) = 0.25;
        SOURCE-ARRIVAL-RATE(l-s4-i3) = 0.34;
        SOURCE-ARRIVAL-RATE(l-s7-i0) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s2-i1) = 0.26;
        SOURCE-ARRIVAL-RATE(l-s6-i2) = 0.3;
        SOURCE-ARRIVAL-RATE(l-s3-i3) = 0.32;
        
        //intersection i0
        //turns
        TURN(l-i1-i0,l-i0-s0);
        TURN(l-i1-i0,l-i0-s7);
        TURN(l-i1-i0,l-i0-i2);
        TURN(l-s0-i0,l-i0-s7);
        TURN(l-s0-i0,l-i0-i2);
        TURN(l-s0-i0,l-i0-i1);
        TURN(l-s7-i0,l-i0-i2);
        TURN(l-s7-i0,l-i0-i1);
        TURN(l-s7-i0,l-i0-s0);
        TURN(l-i2-i0,l-i0-i1);
        TURN(l-i2-i0,l-i0-s0);
        TURN(l-i2-i0,l-i0-s7);
        //link-to
        LINK-TO(l-i1-i0,i0);
        LINK-TO(l-s0-i0,i0);
        LINK-TO(l-s7-i0,i0);
        LINK-TO(l-i2-i0,i0);
        //link-from
        LINK-FROM(i0,l-i0-i1);
        LINK-FROM(i0,l-i0-s0);
        LINK-FROM(i0,l-i0-s7);
        LINK-FROM(i0,l-i0-i2);
        //phase properties
        PHASE-MIN(i0) = 7;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l-i1-i0,l-i0-i2,@WEST-EAST-LEFT);
        GREEN(l-s7-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s7,@WEST-EAST-THROUGH);
        GREEN(l-s7-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i0,l-i0-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-s0-i0,l-i0-s7,@WEST-EAST-LEFT);
        GREEN(l-s0-i0,l-i0-s7,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i0,l-i0-i2,@WEST-EAST-LEFT);
        GREEN(l-s7-i0,l-i0-i2,@WEST-EAST-THROUGH);
        GREEN(l-s7-i0,l-i0-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i0,l-i0-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i0,l-i0-i1,@WEST-EAST-LEFT);
        GREEN(l-i2-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-i2-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i0,l-i0-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED2);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED3);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED4);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED2);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED3);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED4);
        GREEN(l-s7-i0,l-i0-i2,@ALL-RED);
        GREEN(l-s7-i0,l-i0-i2,@ALL-RED2);
        GREEN(l-s7-i0,l-i0-i2,@ALL-RED3);
        GREEN(l-s7-i0,l-i0-i2,@ALL-RED4);
        GREEN(l-i2-i0,l-i0-i1,@ALL-RED);
        GREEN(l-i2-i0,l-i0-i1,@ALL-RED2);
        GREEN(l-i2-i0,l-i0-i1,@ALL-RED3);
        GREEN(l-i2-i0,l-i0-i1,@ALL-RED4);
        
        //intersection i1
        //turns
        TURN(l-s2-i1,l-i1-s1);
        TURN(l-s2-i1,l-i1-i0);
        TURN(l-s2-i1,l-i1-i3);
        TURN(l-s1-i1,l-i1-i0);
        TURN(l-s1-i1,l-i1-i3);
        TURN(l-s1-i1,l-i1-s2);
        TURN(l-i0-i1,l-i1-i3);
        TURN(l-i0-i1,l-i1-s2);
        TURN(l-i0-i1,l-i1-s1);
        TURN(l-i3-i1,l-i1-s2);
        TURN(l-i3-i1,l-i1-s1);
        TURN(l-i3-i1,l-i1-i0);
        //link-to
        LINK-TO(l-s2-i1,i1);
        LINK-TO(l-s1-i1,i1);
        LINK-TO(l-i0-i1,i1);
        LINK-TO(l-i3-i1,i1);
        //link-from
        LINK-FROM(i1,l-i1-s2);
        LINK-FROM(i1,l-i1-s1);
        LINK-FROM(i1,l-i1-i0);
        LINK-FROM(i1,l-i1-i3);
        //phase properties
        PHASE-MIN(i1) = 7;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l-s2-i1,l-i1-i3,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-s2-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-s2,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-s2-i1,l-i1-s1,@WEST-EAST-THROUGH);
        GREEN(l-s2-i1,l-i1-s1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i1,l-i1-i3,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-i3,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i1,l-i1-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i1,l-i1-s2,@WEST-EAST-LEFT);
        GREEN(l-i3-i1,l-i1-s2,@WEST-EAST-THROUGH);
        GREEN(l-i3-i1,l-i1-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i1,l-i1-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i1,l-i1-s1,@ALL-RED);
        GREEN(l-s2-i1,l-i1-s1,@ALL-RED2);
        GREEN(l-s2-i1,l-i1-s1,@ALL-RED3);
        GREEN(l-s2-i1,l-i1-s1,@ALL-RED4);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED2);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED3);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED4);
        GREEN(l-i0-i1,l-i1-i3,@ALL-RED);
        GREEN(l-i0-i1,l-i1-i3,@ALL-RED2);
        GREEN(l-i0-i1,l-i1-i3,@ALL-RED3);
        GREEN(l-i0-i1,l-i1-i3,@ALL-RED4);
        GREEN(l-i3-i1,l-i1-s2,@ALL-RED);
        GREEN(l-i3-i1,l-i1-s2,@ALL-RED2);
        GREEN(l-i3-i1,l-i1-s2,@ALL-RED3);
        GREEN(l-i3-i1,l-i1-s2,@ALL-RED4);
        
        //intersection i2
        //turns
        TURN(l-i3-i2,l-i2-i0);
        TURN(l-i3-i2,l-i2-s6);
        TURN(l-i3-i2,l-i2-s5);
        TURN(l-i0-i2,l-i2-s6);
        TURN(l-i0-i2,l-i2-s5);
        TURN(l-i0-i2,l-i2-i3);
        TURN(l-s6-i2,l-i2-s5);
        TURN(l-s6-i2,l-i2-i3);
        TURN(l-s6-i2,l-i2-i0);
        TURN(l-s5-i2,l-i2-i3);
        TURN(l-s5-i2,l-i2-i0);
        TURN(l-s5-i2,l-i2-s6);
        //link-to
        LINK-TO(l-i3-i2,i2);
        LINK-TO(l-i0-i2,i2);
        LINK-TO(l-s6-i2,i2);
        LINK-TO(l-s5-i2,i2);
        //link-from
        LINK-FROM(i2,l-i2-i3);
        LINK-FROM(i2,l-i2-i0);
        LINK-FROM(i2,l-i2-s6);
        LINK-FROM(i2,l-i2-s5);
        //phase properties
        PHASE-MIN(i2) = 7;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l-i3-i2,l-i2-s5,@WEST-EAST-LEFT);
        GREEN(l-s6-i2,l-i2-i0,@WEST-EAST-LEFT);
        GREEN(l-i3-i2,l-i2-s6,@WEST-EAST-THROUGH);
        GREEN(l-s6-i2,l-i2-i3,@WEST-EAST-THROUGH);
        GREEN(l-i0-i2,l-i2-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i2,l-i2-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i2,l-i2-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i2,l-i2-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i2,l-i2-i0,@WEST-EAST-LEFT);
        GREEN(l-i3-i2,l-i2-i0,@WEST-EAST-THROUGH);
        GREEN(l-i3-i2,l-i2-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i2,l-i2-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i2,l-i2-s6,@WEST-EAST-LEFT);
        GREEN(l-i0-i2,l-i2-s6,@WEST-EAST-THROUGH);
        GREEN(l-i0-i2,l-i2-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i2,l-i2-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i2,l-i2-s5,@WEST-EAST-LEFT);
        GREEN(l-s6-i2,l-i2-s5,@WEST-EAST-THROUGH);
        GREEN(l-s6-i2,l-i2-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i2,l-i2-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i2,l-i2-i3,@WEST-EAST-LEFT);
        GREEN(l-s5-i2,l-i2-i3,@WEST-EAST-THROUGH);
        GREEN(l-s5-i2,l-i2-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i2,l-i2-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i2,l-i2-i0,@ALL-RED);
        GREEN(l-i3-i2,l-i2-i0,@ALL-RED2);
        GREEN(l-i3-i2,l-i2-i0,@ALL-RED3);
        GREEN(l-i3-i2,l-i2-i0,@ALL-RED4);
        GREEN(l-i0-i2,l-i2-s6,@ALL-RED);
        GREEN(l-i0-i2,l-i2-s6,@ALL-RED2);
        GREEN(l-i0-i2,l-i2-s6,@ALL-RED3);
        GREEN(l-i0-i2,l-i2-s6,@ALL-RED4);
        GREEN(l-s6-i2,l-i2-s5,@ALL-RED);
        GREEN(l-s6-i2,l-i2-s5,@ALL-RED2);
        GREEN(l-s6-i2,l-i2-s5,@ALL-RED3);
        GREEN(l-s6-i2,l-i2-s5,@ALL-RED4);
        GREEN(l-s5-i2,l-i2-i3,@ALL-RED);
        GREEN(l-s5-i2,l-i2-i3,@ALL-RED2);
        GREEN(l-s5-i2,l-i2-i3,@ALL-RED3);
        GREEN(l-s5-i2,l-i2-i3,@ALL-RED4);
        
        //intersection i3
        //turns
        TURN(l-s3-i3,l-i3-i1);
        TURN(l-s3-i3,l-i3-i2);
        TURN(l-s3-i3,l-i3-s4);
        TURN(l-i1-i3,l-i3-i2);
        TURN(l-i1-i3,l-i3-s4);
        TURN(l-i1-i3,l-i3-s3);
        TURN(l-i2-i3,l-i3-s4);
        TURN(l-i2-i3,l-i3-s3);
        TURN(l-i2-i3,l-i3-i1);
        TURN(l-s4-i3,l-i3-s3);
        TURN(l-s4-i3,l-i3-i1);
        TURN(l-s4-i3,l-i3-i2);
        //link-to
        LINK-TO(l-s3-i3,i3);
        LINK-TO(l-i1-i3,i3);
        LINK-TO(l-i2-i3,i3);
        LINK-TO(l-s4-i3,i3);
        //link-from
        LINK-FROM(i3,l-i3-s3);
        LINK-FROM(i3,l-i3-i1);
        LINK-FROM(i3,l-i3-i2);
        LINK-FROM(i3,l-i3-s4);
        //phase properties
        PHASE-MIN(i3) = 7;
        PHASE-MAX(i3) = 60;
        PHASE-ALL-RED-DUR(i3) = 4;
        //green turns
        GREEN(l-s3-i3,l-i3-s4,@WEST-EAST-LEFT);
        GREEN(l-i2-i3,l-i3-i1,@WEST-EAST-LEFT);
        GREEN(l-s3-i3,l-i3-i2,@WEST-EAST-THROUGH);
        GREEN(l-i2-i3,l-i3-s3,@WEST-EAST-THROUGH);
        GREEN(l-i1-i3,l-i3-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i3,l-i3-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i3,l-i3-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i3,l-i3-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i3,l-i3-i1,@WEST-EAST-LEFT);
        GREEN(l-s3-i3,l-i3-i1,@WEST-EAST-THROUGH);
        GREEN(l-s3-i3,l-i3-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i3,l-i3-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i3,l-i3-i2,@WEST-EAST-LEFT);
        GREEN(l-i1-i3,l-i3-i2,@WEST-EAST-THROUGH);
        GREEN(l-i1-i3,l-i3-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i3,l-i3-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i3,l-i3-s4,@WEST-EAST-LEFT);
        GREEN(l-i2-i3,l-i3-s4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i3,l-i3-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i3,l-i3-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i3,l-i3-s3,@WEST-EAST-LEFT);
        GREEN(l-s4-i3,l-i3-s3,@WEST-EAST-THROUGH);
        GREEN(l-s4-i3,l-i3-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i3,l-i3-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i3,l-i3-i1,@ALL-RED);
        GREEN(l-s3-i3,l-i3-i1,@ALL-RED2);
        GREEN(l-s3-i3,l-i3-i1,@ALL-RED3);
        GREEN(l-s3-i3,l-i3-i1,@ALL-RED4);
        GREEN(l-i1-i3,l-i3-i2,@ALL-RED);
        GREEN(l-i1-i3,l-i3-i2,@ALL-RED2);
        GREEN(l-i1-i3,l-i3-i2,@ALL-RED3);
        GREEN(l-i1-i3,l-i3-i2,@ALL-RED4);
        GREEN(l-i2-i3,l-i3-s4,@ALL-RED);
        GREEN(l-i2-i3,l-i3-s4,@ALL-RED2);
        GREEN(l-i2-i3,l-i3-s4,@ALL-RED3);
        GREEN(l-i2-i3,l-i3-s4,@ALL-RED4);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED2);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED3);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED4);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t27);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        TIME-VAL(t25) = 25;
        TIME-VAL(t26) = 26;
        TIME-VAL(t27) = 27;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
        NEXT(t8,t9);
        NEXT(t9,t10);
        NEXT(t10,t11);
        NEXT(t11,t12);
        NEXT(t12,t13);
        NEXT(t13,t14);
        NEXT(t14,t15);
        NEXT(t15,t16);
        NEXT(t16,t17);
        NEXT(t17,t18);
        NEXT(t18,t19);
        NEXT(t19,t20);
        NEXT(t20,t21);
        NEXT(t21,t22);
        NEXT(t22,t23);
        NEXT(t23,t24);
        NEXT(t24,t25);
        NEXT(t25,t26);
        NEXT(t26,t27);
        //cartesian coordinates (for visualization)
        X(i0) = 345.0; Y(i0) = 579.0;
        X(i1) = 574.0; Y(i1) = 579.0;
        X(i2) = 345.0; Y(i2) = 352.0;
        X(i3) = 574.0; Y(i3) = 352.0;
        SOURCE-X(l-s7-i0) = 0.0; SOURCE-Y(l-s7-i0) = 579.0;
        SOURCE-X(l-s2-i1) = 824.0; SOURCE-Y(l-s2-i1) = 579.0;
        SINK-X(l-i0-s7) = 0.0; SINK-Y(l-i0-s7) = 579.0;
        SINK-X(l-i1-s2) = 824.0; SINK-Y(l-i1-s2) = 579.0;
        SOURCE-X(l-s6-i2) = 0.0; SOURCE-Y(l-s6-i2) = 352.0;
        SOURCE-X(l-s3-i3) = 824.0; SOURCE-Y(l-s3-i3) = 352.0;
        SINK-X(l-i2-s6) = 0.0; SINK-Y(l-i2-s6) = 352.0;
        SINK-X(l-i3-s3) = 824.0; SINK-Y(l-i3-s3) = 352.0;
        SOURCE-X(l-s0-i0) = 345.0; SOURCE-Y(l-s0-i0) = 820.0;
        SOURCE-X(l-s5-i2) = 345.0; SOURCE-Y(l-s5-i2) = 0.0;
        SINK-X(l-i0-s0) = 345.0; SINK-Y(l-i0-s0) = 820.0;
        SINK-X(l-i2-s5) = 345.0; SINK-Y(l-i2-s5) = 0.0;
        SOURCE-X(l-s1-i1) = 574.0; SOURCE-Y(l-s1-i1) = 820.0;
        SOURCE-X(l-s4-i3) = 574.0; SOURCE-Y(l-s4-i3) = 0.0;
        SINK-X(l-i1-s1) = 574.0; SINK-Y(l-i1-s1) = 820.0;
        SINK-X(l-i3-s4) = 574.0; SINK-Y(l-i3-s4) = 0.0;
    };
}

instance grid_2x2 {
    domain = BLX_model;
    non-fluents = grid_2x2;
    max-nondef-actions = 4;
    horizon = 200;
    discount = 1.0;
}
// Source link ids
l-s0-i0, l-s5-i2, l-s1-i1, l-s4-i3, l-s7-i0, l-s2-i1, l-s6-i2, l-s3-i3