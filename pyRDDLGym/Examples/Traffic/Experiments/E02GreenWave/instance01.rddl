non-fluents green_wave_10_experiment {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3, i4, i5, i6, i7, i8, i9};
        link         : {l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21, l22, l23, l24, l25, l26, l27, l28, l29, l30, l31, l32, l33, l34, l35, l36, l37, l38, l39, l40, l41, l42, l43, l44, l45, l46, l47, l48, l49, l50, l51, l52, l53, l54, l55, l56, l57, l58, l59, l60, l61};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8};
    };

    //             | |                                          | |                     
    //             | |                                          | |                     
    //             | |                                          | |                     
    //    l(2*(N+1)) l(2*(N+1)+1)   ...                    l(4*N) l(4*N+1)              
    //             | |                                          | |                     
    //             v ^                                          v ^                     
    //             | |                                          | |                     
    //             ____                                       ________                  
    // --- l0 -<- | i0 | -<- l2 --- ... --- l(2*(N-1))   -<- | i(N-1) | -<- l(2*N)   ---
    // --- l1 ->- |____| ->- l3 --- ... --- l(2*(N-1)+1) ->- |________| ->- l(2*N+1) ---
    //             | |                                          | |                     
    //             v ^                                          v ^                     
    //             | |                                          | |                     
    //   l(2*(2N+1)) l(2*(2N+1)+1)  ...                    l(6*N) l(6*N+1)              
    //             | |                                          | |                     
    //             | |                                          | |                     
    //             | |                                          | |                     

    non-fluents {
        Ts = 1;

        //cartesian coordinates
        X(i0) = 100;    Y(i0) = 100;
        X(i1) = 200;    Y(i1) = 100;
        X(i2) = 300;    Y(i2) = 100;
        X(i3) = 400;    Y(i3) = 100;
        X(i4) = 500;    Y(i4) = 100;
        X(i5) = 600;    Y(i5) = 100;
        X(i6) = 700;    Y(i6) = 100;
        X(i7) = 800;    Y(i7) = 100;
        X(i8) = 900;    Y(i8) = 100;
        X(i9) = 1000;    Y(i9) = 100;
        SOURCE-X(l1) = 0;    SOURCE-Y(l1) = 100;
        SOURCE-X(l20) = 1100;    SOURCE-Y(l20) = 100;
        SOURCE-X(l22) = 100;    SOURCE-Y(l22) = 200;
        SOURCE-X(l24) = 200;    SOURCE-Y(l24) = 200;
        SOURCE-X(l26) = 300;    SOURCE-Y(l26) = 200;
        SOURCE-X(l28) = 400;    SOURCE-Y(l28) = 200;
        SOURCE-X(l30) = 500;    SOURCE-Y(l30) = 200;
        SOURCE-X(l32) = 600;    SOURCE-Y(l32) = 200;
        SOURCE-X(l34) = 700;    SOURCE-Y(l34) = 200;
        SOURCE-X(l36) = 800;    SOURCE-Y(l36) = 200;
        SOURCE-X(l38) = 900;    SOURCE-Y(l38) = 200;
        SOURCE-X(l40) = 1000;    SOURCE-Y(l40) = 200;
        SOURCE-X(l43) = 100;    SOURCE-Y(l43) = 0;
        SOURCE-X(l45) = 200;    SOURCE-Y(l45) = 0;
        SOURCE-X(l47) = 300;    SOURCE-Y(l47) = 0;
        SOURCE-X(l49) = 400;    SOURCE-Y(l49) = 0;
        SOURCE-X(l51) = 500;    SOURCE-Y(l51) = 0;
        SOURCE-X(l53) = 600;    SOURCE-Y(l53) = 0;
        SOURCE-X(l55) = 700;    SOURCE-Y(l55) = 0;
        SOURCE-X(l57) = 800;    SOURCE-Y(l57) = 0;
        SOURCE-X(l59) = 900;    SOURCE-Y(l59) = 0;
        SOURCE-X(l61) = 1000;    SOURCE-Y(l61) = 0;
        SINK-X(l0) = 0;    SINK-Y(l0) = 100;
        SINK-X(l21) = 1100;    SINK-Y(l21) = 100;
        SINK-X(l23) = 100;    SINK-Y(l23) = 200;
        SINK-X(l25) = 200;    SINK-Y(l25) = 200;
        SINK-X(l27) = 300;    SINK-Y(l27) = 200;
        SINK-X(l29) = 400;    SINK-Y(l29) = 200;
        SINK-X(l31) = 500;    SINK-Y(l31) = 200;
        SINK-X(l33) = 600;    SINK-Y(l33) = 200;
        SINK-X(l35) = 700;    SINK-Y(l35) = 200;
        SINK-X(l37) = 800;    SINK-Y(l37) = 200;
        SINK-X(l39) = 900;    SINK-Y(l39) = 200;
        SINK-X(l41) = 1000;    SINK-Y(l41) = 200;
        SINK-X(l42) = 100;    SINK-Y(l42) = 0;
        SINK-X(l44) = 200;    SINK-Y(l44) = 0;
        SINK-X(l46) = 300;    SINK-Y(l46) = 0;
        SINK-X(l48) = 400;    SINK-Y(l48) = 0;
        SINK-X(l50) = 500;    SINK-Y(l50) = 0;
        SINK-X(l52) = 600;    SINK-Y(l52) = 0;
        SINK-X(l54) = 700;    SINK-Y(l54) = 0;
        SINK-X(l56) = 800;    SINK-Y(l56) = 0;
        SINK-X(l58) = 900;    SINK-Y(l58) = 0;
        SINK-X(l60) = 1000;    SINK-Y(l60) = 0;
        
        // source links
        SOURCE(l1);
        SOURCE(l20);
        SOURCE(l22);
        SOURCE(l24);
        SOURCE(l26);
        SOURCE(l28);
        SOURCE(l30);
        SOURCE(l32);
        SOURCE(l34);
        SOURCE(l36);
        SOURCE(l38);
        SOURCE(l40);
        SOURCE(l43);
        SOURCE(l45);
        SOURCE(l47);
        SOURCE(l49);
        SOURCE(l51);
        SOURCE(l53);
        SOURCE(l55);
        SOURCE(l57);
        SOURCE(l59);
        SOURCE(l61);
        
        // sink links
        SINK(l0);
        SINK(l21);
        SINK(l23);
        SINK(l25);
        SINK(l27);
        SINK(l29);
        SINK(l31);
        SINK(l33);
        SINK(l35);
        SINK(l37);
        SINK(l39);
        SINK(l41);
        SINK(l42);
        SINK(l44);
        SINK(l46);
        SINK(l48);
        SINK(l50);
        SINK(l52);
        SINK(l54);
        SINK(l56);
        SINK(l58);
        SINK(l60);
        
        // west-east arrivals (dominant flow)
        SOURCE-ARRIVAL-RATE(l1) = 0.7;
        
        // other flows
        SOURCE-ARRIVAL-RATE(l20) = 0.0;
        SOURCE-ARRIVAL-RATE(l22) = 0.0;
        SOURCE-ARRIVAL-RATE(l24) = 0.0;
        SOURCE-ARRIVAL-RATE(l26) = 0.0;
        SOURCE-ARRIVAL-RATE(l28) = 0.0;
        SOURCE-ARRIVAL-RATE(l30) = 0.0;
        SOURCE-ARRIVAL-RATE(l32) = 0.0;
        SOURCE-ARRIVAL-RATE(l34) = 0.0;
        SOURCE-ARRIVAL-RATE(l36) = 0.0;
        SOURCE-ARRIVAL-RATE(l38) = 0.0;
        SOURCE-ARRIVAL-RATE(l40) = 0.0;
        SOURCE-ARRIVAL-RATE(l43) = 0.0;
        SOURCE-ARRIVAL-RATE(l45) = 0.0;
        SOURCE-ARRIVAL-RATE(l47) = 0.0;
        SOURCE-ARRIVAL-RATE(l49) = 0.0;
        SOURCE-ARRIVAL-RATE(l51) = 0.0;
        SOURCE-ARRIVAL-RATE(l53) = 0.0;
        SOURCE-ARRIVAL-RATE(l55) = 0.0;
        SOURCE-ARRIVAL-RATE(l57) = 0.0;
        SOURCE-ARRIVAL-RATE(l59) = 0.0;
        SOURCE-ARRIVAL-RATE(l61) = 0.0;
        
        // link lengths
        Dl(l0) = 100;
        Dl(l1) = 100;
        Dl(l2) = 100;
        Dl(l3) = 100;
        Dl(l4) = 100;
        Dl(l5) = 100;
        Dl(l6) = 100;
        Dl(l7) = 100;
        Dl(l8) = 100;
        Dl(l9) = 100;
        Dl(l10) = 100;
        Dl(l11) = 100;
        Dl(l12) = 100;
        Dl(l13) = 100;
        Dl(l14) = 100;
        Dl(l15) = 100;
        Dl(l16) = 100;
        Dl(l17) = 100;
        Dl(l18) = 100;
        Dl(l19) = 100;
        Dl(l20) = 100;
        Dl(l21) = 100;
        Dl(l22) = 100;
        Dl(l23) = 100;
        Dl(l24) = 100;
        Dl(l25) = 100;
        Dl(l26) = 100;
        Dl(l27) = 100;
        Dl(l28) = 100;
        Dl(l29) = 100;
        Dl(l30) = 100;
        Dl(l31) = 100;
        Dl(l32) = 100;
        Dl(l33) = 100;
        Dl(l34) = 100;
        Dl(l35) = 100;
        Dl(l36) = 100;
        Dl(l37) = 100;
        Dl(l38) = 100;
        Dl(l39) = 100;
        Dl(l40) = 100;
        Dl(l41) = 100;
        Dl(l42) = 100;
        Dl(l43) = 100;
        Dl(l44) = 100;
        Dl(l45) = 100;
        Dl(l46) = 100;
        Dl(l47) = 100;
        Dl(l48) = 100;
        Dl(l49) = 100;
        Dl(l50) = 100;
        Dl(l51) = 100;
        Dl(l52) = 100;
        Dl(l53) = 100;
        Dl(l54) = 100;
        Dl(l55) = 100;
        Dl(l56) = 100;
        Dl(l57) = 100;
        Dl(l58) = 100;
        Dl(l59) = 100;
        Dl(l60) = 100;
        Dl(l61) = 100;
        
        // satflow rates
        MU(l1,l3) = 1.06;
        MU(l3,l5) = 1.06;
        MU(l5,l7) = 1.06;
        MU(l7,l9) = 1.06;
        MU(l9,l11) = 1.06;
        MU(l11,l13) = 1.06;
        MU(l13,l15) = 1.06;
        MU(l15,l17) = 1.06;
        MU(l17,l19) = 1.06;
        MU(l19,l21) = 1.06;
        
        // turn probabilities
        BETA(l1,l23) = 0.0;
        BETA(l3,l25) = 0.0;
        BETA(l5,l27) = 0.0;
        BETA(l7,l29) = 0.0;
        BETA(l9,l31) = 0.0;
        BETA(l11,l33) = 0.0;
        BETA(l13,l35) = 0.0;
        BETA(l15,l37) = 0.0;
        BETA(l17,l39) = 0.0;
        BETA(l19,l41) = 0.0;
        BETA(l1,l3) = 1.0;
        BETA(l3,l5) = 1.0;
        BETA(l5,l7) = 1.0;
        BETA(l7,l9) = 1.0;
        BETA(l9,l11) = 1.0;
        BETA(l11,l13) = 1.0;
        BETA(l13,l15) = 1.0;
        BETA(l15,l17) = 1.0;
        BETA(l17,l19) = 1.0;
        BETA(l19,l21) = 1.0;
        BETA(l1,l42) = 0.0;
        BETA(l3,l44) = 0.0;
        BETA(l5,l46) = 0.0;
        BETA(l7,l48) = 0.0;
        BETA(l9,l50) = 0.0;
        BETA(l11,l52) = 0.0;
        BETA(l13,l54) = 0.0;
        BETA(l15,l56) = 0.0;
        BETA(l17,l58) = 0.0;
        BETA(l19,l60) = 0.0;
        
        //intersection i0
        //turns
        TURN(l2,l23);
        TURN(l2,l0);
        TURN(l2,l42);
        TURN(l22,l0);
        TURN(l22,l42);
        TURN(l22,l3);
        TURN(l1,l42);
        TURN(l1,l3);
        TURN(l1,l23);
        TURN(l43,l3);
        TURN(l43,l23);
        TURN(l43,l0);
        //link-to
        LINK-TO(l2,i0);
        LINK-TO(l22,i0);
        LINK-TO(l1,i0);
        LINK-TO(l43,i0);
        //link-from
        LINK-FROM(i0,l3);
        LINK-FROM(i0,l23);
        LINK-FROM(i0,l0);
        LINK-FROM(i0,l42);
        //phase properties
        PHASE-MIN(i0) = 24;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l2,l0,@WEST-EAST-THROUGH);
        GREEN(l1,l3,@WEST-EAST-THROUGH);
        GREEN(l22,l42,@NORTH-SOUTH-THROUGH);
        GREEN(l43,l23,@NORTH-SOUTH-THROUGH);
        
        //intersection i1
        //turns
        TURN(l4,l25);
        TURN(l4,l2);
        TURN(l4,l44);
        TURN(l24,l2);
        TURN(l24,l44);
        TURN(l24,l5);
        TURN(l3,l44);
        TURN(l3,l5);
        TURN(l3,l25);
        TURN(l45,l5);
        TURN(l45,l25);
        TURN(l45,l2);
        //link-to
        LINK-TO(l4,i1);
        LINK-TO(l24,i1);
        LINK-TO(l3,i1);
        LINK-TO(l45,i1);
        //link-from
        LINK-FROM(i1,l5);
        LINK-FROM(i1,l25);
        LINK-FROM(i1,l2);
        LINK-FROM(i1,l44);
        //phase properties
        PHASE-MIN(i1) = 24;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l4,l2,@WEST-EAST-THROUGH);
        GREEN(l3,l5,@WEST-EAST-THROUGH);
        GREEN(l24,l44,@NORTH-SOUTH-THROUGH);
        GREEN(l45,l25,@NORTH-SOUTH-THROUGH);
        
        //intersection i2
        //turns
        TURN(l6,l27);
        TURN(l6,l4);
        TURN(l6,l46);
        TURN(l26,l4);
        TURN(l26,l46);
        TURN(l26,l7);
        TURN(l5,l46);
        TURN(l5,l7);
        TURN(l5,l27);
        TURN(l47,l7);
        TURN(l47,l27);
        TURN(l47,l4);
        //link-to
        LINK-TO(l6,i2);
        LINK-TO(l26,i2);
        LINK-TO(l5,i2);
        LINK-TO(l47,i2);
        //link-from
        LINK-FROM(i2,l7);
        LINK-FROM(i2,l27);
        LINK-FROM(i2,l4);
        LINK-FROM(i2,l46);
        //phase properties
        PHASE-MIN(i2) = 24;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l6,l4,@WEST-EAST-THROUGH);
        GREEN(l5,l7,@WEST-EAST-THROUGH);
        GREEN(l26,l46,@NORTH-SOUTH-THROUGH);
        GREEN(l47,l27,@NORTH-SOUTH-THROUGH);
        
        //intersection i3
        //turns
        TURN(l8,l29);
        TURN(l8,l6);
        TURN(l8,l48);
        TURN(l28,l6);
        TURN(l28,l48);
        TURN(l28,l9);
        TURN(l7,l48);
        TURN(l7,l9);
        TURN(l7,l29);
        TURN(l49,l9);
        TURN(l49,l29);
        TURN(l49,l6);
        //link-to
        LINK-TO(l8,i3);
        LINK-TO(l28,i3);
        LINK-TO(l7,i3);
        LINK-TO(l49,i3);
        //link-from
        LINK-FROM(i3,l9);
        LINK-FROM(i3,l29);
        LINK-FROM(i3,l6);
        LINK-FROM(i3,l48);
        //phase properties
        PHASE-MIN(i3) = 24;
        PHASE-MAX(i3) = 60;
        PHASE-ALL-RED-DUR(i3) = 4;
        //green turns
        GREEN(l8,l6,@WEST-EAST-THROUGH);
        GREEN(l7,l9,@WEST-EAST-THROUGH);
        GREEN(l28,l48,@NORTH-SOUTH-THROUGH);
        GREEN(l49,l29,@NORTH-SOUTH-THROUGH);
        
        //intersection i4
        //turns
        TURN(l10,l31);
        TURN(l10,l8);
        TURN(l10,l50);
        TURN(l30,l8);
        TURN(l30,l50);
        TURN(l30,l11);
        TURN(l9,l50);
        TURN(l9,l11);
        TURN(l9,l31);
        TURN(l51,l11);
        TURN(l51,l31);
        TURN(l51,l8);
        //link-to
        LINK-TO(l10,i4);
        LINK-TO(l30,i4);
        LINK-TO(l9,i4);
        LINK-TO(l51,i4);
        //link-from
        LINK-FROM(i4,l11);
        LINK-FROM(i4,l31);
        LINK-FROM(i4,l8);
        LINK-FROM(i4,l50);
        //phase properties
        PHASE-MIN(i4) = 24;
        PHASE-MAX(i4) = 60;
        PHASE-ALL-RED-DUR(i4) = 4;
        //green turns
        GREEN(l10,l8,@WEST-EAST-THROUGH);
        GREEN(l9,l11,@WEST-EAST-THROUGH);
        GREEN(l30,l50,@NORTH-SOUTH-THROUGH);
        GREEN(l51,l31,@NORTH-SOUTH-THROUGH);
        
        //intersection i5
        //turns
        TURN(l12,l33);
        TURN(l12,l10);
        TURN(l12,l52);
        TURN(l32,l10);
        TURN(l32,l52);
        TURN(l32,l13);
        TURN(l11,l52);
        TURN(l11,l13);
        TURN(l11,l33);
        TURN(l53,l13);
        TURN(l53,l33);
        TURN(l53,l10);
        //link-to
        LINK-TO(l12,i5);
        LINK-TO(l32,i5);
        LINK-TO(l11,i5);
        LINK-TO(l53,i5);
        //link-from
        LINK-FROM(i5,l13);
        LINK-FROM(i5,l33);
        LINK-FROM(i5,l10);
        LINK-FROM(i5,l52);
        //phase properties
        PHASE-MIN(i5) = 24;
        PHASE-MAX(i5) = 60;
        PHASE-ALL-RED-DUR(i5) = 4;
        //green turns
        GREEN(l12,l10,@WEST-EAST-THROUGH);
        GREEN(l11,l13,@WEST-EAST-THROUGH);
        GREEN(l32,l52,@NORTH-SOUTH-THROUGH);
        GREEN(l53,l33,@NORTH-SOUTH-THROUGH);
        
        //intersection i6
        //turns
        TURN(l14,l35);
        TURN(l14,l12);
        TURN(l14,l54);
        TURN(l34,l12);
        TURN(l34,l54);
        TURN(l34,l15);
        TURN(l13,l54);
        TURN(l13,l15);
        TURN(l13,l35);
        TURN(l55,l15);
        TURN(l55,l35);
        TURN(l55,l12);
        //link-to
        LINK-TO(l14,i6);
        LINK-TO(l34,i6);
        LINK-TO(l13,i6);
        LINK-TO(l55,i6);
        //link-from
        LINK-FROM(i6,l15);
        LINK-FROM(i6,l35);
        LINK-FROM(i6,l12);
        LINK-FROM(i6,l54);
        //phase properties
        PHASE-MIN(i6) = 24;
        PHASE-MAX(i6) = 60;
        PHASE-ALL-RED-DUR(i6) = 4;
        //green turns
        GREEN(l14,l12,@WEST-EAST-THROUGH);
        GREEN(l13,l15,@WEST-EAST-THROUGH);
        GREEN(l34,l54,@NORTH-SOUTH-THROUGH);
        GREEN(l55,l35,@NORTH-SOUTH-THROUGH);
        
        //intersection i7
        //turns
        TURN(l16,l37);
        TURN(l16,l14);
        TURN(l16,l56);
        TURN(l36,l14);
        TURN(l36,l56);
        TURN(l36,l17);
        TURN(l15,l56);
        TURN(l15,l17);
        TURN(l15,l37);
        TURN(l57,l17);
        TURN(l57,l37);
        TURN(l57,l14);
        //link-to
        LINK-TO(l16,i7);
        LINK-TO(l36,i7);
        LINK-TO(l15,i7);
        LINK-TO(l57,i7);
        //link-from
        LINK-FROM(i7,l17);
        LINK-FROM(i7,l37);
        LINK-FROM(i7,l14);
        LINK-FROM(i7,l56);
        //phase properties
        PHASE-MIN(i7) = 24;
        PHASE-MAX(i7) = 60;
        PHASE-ALL-RED-DUR(i7) = 4;
        //green turns
        GREEN(l16,l14,@WEST-EAST-THROUGH);
        GREEN(l15,l17,@WEST-EAST-THROUGH);
        GREEN(l36,l56,@NORTH-SOUTH-THROUGH);
        GREEN(l57,l37,@NORTH-SOUTH-THROUGH);
        
        //intersection i8
        //turns
        TURN(l18,l39);
        TURN(l18,l16);
        TURN(l18,l58);
        TURN(l38,l16);
        TURN(l38,l58);
        TURN(l38,l19);
        TURN(l17,l58);
        TURN(l17,l19);
        TURN(l17,l39);
        TURN(l59,l19);
        TURN(l59,l39);
        TURN(l59,l16);
        //link-to
        LINK-TO(l18,i8);
        LINK-TO(l38,i8);
        LINK-TO(l17,i8);
        LINK-TO(l59,i8);
        //link-from
        LINK-FROM(i8,l19);
        LINK-FROM(i8,l39);
        LINK-FROM(i8,l16);
        LINK-FROM(i8,l58);
        //phase properties
        PHASE-MIN(i8) = 24;
        PHASE-MAX(i8) = 60;
        PHASE-ALL-RED-DUR(i8) = 4;
        //green turns
        GREEN(l18,l16,@WEST-EAST-THROUGH);
        GREEN(l17,l19,@WEST-EAST-THROUGH);
        GREEN(l38,l58,@NORTH-SOUTH-THROUGH);
        GREEN(l59,l39,@NORTH-SOUTH-THROUGH);
        
        //intersection i9
        //turns
        TURN(l20,l41);
        TURN(l20,l18);
        TURN(l20,l60);
        TURN(l40,l18);
        TURN(l40,l60);
        TURN(l40,l21);
        TURN(l19,l60);
        TURN(l19,l21);
        TURN(l19,l41);
        TURN(l61,l21);
        TURN(l61,l41);
        TURN(l61,l18);
        //link-to
        LINK-TO(l20,i9);
        LINK-TO(l40,i9);
        LINK-TO(l19,i9);
        LINK-TO(l61,i9);
        //link-from
        LINK-FROM(i9,l21);
        LINK-FROM(i9,l41);
        LINK-FROM(i9,l18);
        LINK-FROM(i9,l60);
        //phase properties
        PHASE-MIN(i9) = 24;
        PHASE-MAX(i9) = 60;
        PHASE-ALL-RED-DUR(i9) = 4;
        //green turns
        GREEN(l20,l18,@WEST-EAST-THROUGH);
        GREEN(l19,l21,@WEST-EAST-THROUGH);
        GREEN(l40,l60,@NORTH-SOUTH-THROUGH);
        GREEN(l61,l41,@NORTH-SOUTH-THROUGH);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t8);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
    };
}

instance green_wave_10_experiment {
    domain = BLX_model;
    non-fluents = green_wave_10_experiment;
    max-nondef-actions = 10;
    horizon = 256; //1024;
    discount = 1.0;
}
