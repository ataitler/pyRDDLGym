non-fluents network_4x4 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15};
        link         : {l-i0-s0, l-i0-i1, l-i0-i4, l-i0-s15, l-i1-s1, l-i1-i2, l-i1-i5, l-i1-i0, l-i2-s2, l-i2-i3, l-i2-i6, l-i2-i1, l-i3-s3, l-i3-s4, l-i3-i7, l-i3-i2, l-i4-i0, l-i4-i5, l-i4-i8, l-i4-s14, l-i5-i1, l-i5-i6, l-i5-i9, l-i5-i4, l-i6-i2, l-i6-i7, l-i6-i10, l-i6-i5, l-i7-i3, l-i7-s5, l-i7-i11, l-i7-i6, l-i8-i4, l-i8-i9, l-i8-i12, l-i8-s13, l-i9-i5, l-i9-i10, l-i9-i13, l-i9-i8, l-i10-i6, l-i10-i11, l-i10-i14, l-i10-i9, l-i11-i7, l-i11-s6, l-i11-i15, l-i11-i10, l-i12-i8, l-i12-i13, l-i12-s11, l-i12-s12, l-i13-i9, l-i13-i14, l-i13-s10, l-i13-i12, l-i14-i10, l-i14-i15, l-i14-s9, l-i14-i13, l-i15-i11, l-i15-s7, l-i15-s8, l-i15-i14, l-s0-i0, l-s11-i12, l-s1-i1, l-s10-i13, l-s2-i2, l-s9-i14, l-s3-i3, l-s8-i15, l-s15-i0, l-s4-i3, l-s14-i4, l-s5-i7, l-s13-i8, l-s6-i11, l-s12-i12, l-s7-i15};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25};
    };

    non-fluents {
        Ts = 3;

        //sources
        SOURCE(l-s15-i0);
        SOURCE(l-s4-i3);
        SOURCE(l-s14-i4);
        SOURCE(l-s5-i7);
        SOURCE(l-s13-i8);
        SOURCE(l-s6-i11);
        SOURCE(l-s12-i12);
        SOURCE(l-s7-i15);
        SOURCE(l-s0-i0);
        SOURCE(l-s11-i12);
        SOURCE(l-s1-i1);
        SOURCE(l-s10-i13);
        SOURCE(l-s2-i2);
        SOURCE(l-s9-i14);
        SOURCE(l-s3-i3);
        SOURCE(l-s8-i15);
        //sinks
        SINK(l-i0-s15);
        SINK(l-i3-s4);
        SINK(l-i4-s14);
        SINK(l-i7-s5);
        SINK(l-i8-s13);
        SINK(l-i11-s6);
        SINK(l-i12-s12);
        SINK(l-i15-s7);
        SINK(l-i0-s0);
        SINK(l-i12-s11);
        SINK(l-i1-s1);
        SINK(l-i13-s10);
        SINK(l-i2-s2);
        SINK(l-i14-s9);
        SINK(l-i3-s3);
        SINK(l-i15-s8);
        //satflow rates
        MU(l-s15-i0,l-i0-i1) = 1.06;
        MU(l-s15-i0,l-i0-s0) = 0.636;
        MU(l-s15-i0,l-i0-i4) = 0.42400000000000004;
        MU(l-s0-i0,l-i0-i1) = 1.06;
        MU(l-i1-i0,l-i0-s15) = 0.636;
        MU(l-i4-i0,l-i0-i1) = 0.42400000000000004;
        MU(l-s0-i0,l-i0-i4) = 1.06;
        MU(l-i1-i0,l-i0-i4) = 0.636;
        MU(l-i1-i0,l-i0-s0) = 0.42400000000000004;
        MU(l-i4-i0,l-i0-s15) = 1.06;
        MU(l-i4-i0,l-i0-s0) = 0.636;
        MU(l-s0-i0,l-i0-s15) = 0.42400000000000004;
        MU(l-i0-i1,l-i1-i2) = 1.06;
        MU(l-i0-i1,l-i1-s1) = 0.636;
        MU(l-i0-i1,l-i1-i5) = 0.42400000000000004;
        MU(l-i2-i1,l-i1-i0) = 1.06;
        MU(l-s1-i1,l-i1-i2) = 0.636;
        MU(l-i5-i1,l-i1-i2) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-i5) = 1.06;
        MU(l-i2-i1,l-i1-i5) = 0.636;
        MU(l-i2-i1,l-i1-s1) = 0.42400000000000004;
        MU(l-i5-i1,l-i1-s1) = 1.06;
        MU(l-i5-i1,l-i1-i0) = 0.636;
        MU(l-s1-i1,l-i1-i0) = 0.42400000000000004;
        MU(l-i1-i2,l-i2-i3) = 1.06;
        MU(l-i1-i2,l-i2-s2) = 0.636;
        MU(l-i1-i2,l-i2-i6) = 0.42400000000000004;
        MU(l-i3-i2,l-i2-i1) = 1.06;
        MU(l-s2-i2,l-i2-i3) = 0.636;
        MU(l-i6-i2,l-i2-i3) = 0.42400000000000004;
        MU(l-s2-i2,l-i2-i6) = 1.06;
        MU(l-i3-i2,l-i2-i6) = 0.636;
        MU(l-i3-i2,l-i2-s2) = 0.42400000000000004;
        MU(l-i6-i2,l-i2-s2) = 1.06;
        MU(l-i6-i2,l-i2-i1) = 0.636;
        MU(l-s2-i2,l-i2-i1) = 0.42400000000000004;
        MU(l-i2-i3,l-i3-s4) = 1.06;
        MU(l-i2-i3,l-i3-s3) = 0.636;
        MU(l-i2-i3,l-i3-i7) = 0.42400000000000004;
        MU(l-s4-i3,l-i3-i2) = 1.06;
        MU(l-s3-i3,l-i3-s4) = 0.636;
        MU(l-i7-i3,l-i3-s4) = 0.42400000000000004;
        MU(l-s3-i3,l-i3-i7) = 1.06;
        MU(l-s4-i3,l-i3-i7) = 0.636;
        MU(l-s4-i3,l-i3-s3) = 0.42400000000000004;
        MU(l-i7-i3,l-i3-s3) = 1.06;
        MU(l-i7-i3,l-i3-i2) = 0.636;
        MU(l-s3-i3,l-i3-i2) = 0.42400000000000004;
        MU(l-s14-i4,l-i4-i5) = 1.06;
        MU(l-s14-i4,l-i4-i0) = 0.636;
        MU(l-s14-i4,l-i4-i8) = 0.42400000000000004;
        MU(l-i5-i4,l-i4-s14) = 1.06;
        MU(l-i0-i4,l-i4-i5) = 0.636;
        MU(l-i8-i4,l-i4-i5) = 0.42400000000000004;
        MU(l-i0-i4,l-i4-i8) = 1.06;
        MU(l-i5-i4,l-i4-i8) = 0.636;
        MU(l-i5-i4,l-i4-i0) = 0.42400000000000004;
        MU(l-i8-i4,l-i4-i0) = 1.06;
        MU(l-i8-i4,l-i4-s14) = 0.636;
        MU(l-i0-i4,l-i4-s14) = 0.42400000000000004;
        MU(l-i4-i5,l-i5-i6) = 1.06;
        MU(l-i4-i5,l-i5-i1) = 0.636;
        MU(l-i4-i5,l-i5-i9) = 0.42400000000000004;
        MU(l-i6-i5,l-i5-i4) = 1.06;
        MU(l-i1-i5,l-i5-i6) = 0.636;
        MU(l-i9-i5,l-i5-i6) = 0.42400000000000004;
        MU(l-i1-i5,l-i5-i9) = 1.06;
        MU(l-i6-i5,l-i5-i9) = 0.636;
        MU(l-i6-i5,l-i5-i1) = 0.42400000000000004;
        MU(l-i9-i5,l-i5-i1) = 1.06;
        MU(l-i9-i5,l-i5-i4) = 0.636;
        MU(l-i1-i5,l-i5-i4) = 0.42400000000000004;
        MU(l-i5-i6,l-i6-i7) = 1.06;
        MU(l-i5-i6,l-i6-i2) = 0.636;
        MU(l-i5-i6,l-i6-i10) = 0.42400000000000004;
        MU(l-i7-i6,l-i6-i5) = 1.06;
        MU(l-i2-i6,l-i6-i7) = 0.636;
        MU(l-i10-i6,l-i6-i7) = 0.42400000000000004;
        MU(l-i2-i6,l-i6-i10) = 1.06;
        MU(l-i7-i6,l-i6-i10) = 0.636;
        MU(l-i7-i6,l-i6-i2) = 0.42400000000000004;
        MU(l-i10-i6,l-i6-i2) = 1.06;
        MU(l-i10-i6,l-i6-i5) = 0.636;
        MU(l-i2-i6,l-i6-i5) = 0.42400000000000004;
        MU(l-i6-i7,l-i7-s5) = 1.06;
        MU(l-i6-i7,l-i7-i3) = 0.636;
        MU(l-i6-i7,l-i7-i11) = 0.42400000000000004;
        MU(l-s5-i7,l-i7-i6) = 1.06;
        MU(l-i3-i7,l-i7-s5) = 0.636;
        MU(l-i11-i7,l-i7-s5) = 0.42400000000000004;
        MU(l-i3-i7,l-i7-i11) = 1.06;
        MU(l-s5-i7,l-i7-i11) = 0.636;
        MU(l-s5-i7,l-i7-i3) = 0.42400000000000004;
        MU(l-i11-i7,l-i7-i3) = 1.06;
        MU(l-i11-i7,l-i7-i6) = 0.636;
        MU(l-i3-i7,l-i7-i6) = 0.42400000000000004;
        MU(l-s13-i8,l-i8-i9) = 1.06;
        MU(l-s13-i8,l-i8-i4) = 0.636;
        MU(l-s13-i8,l-i8-i12) = 0.42400000000000004;
        MU(l-i9-i8,l-i8-s13) = 1.06;
        MU(l-i4-i8,l-i8-i9) = 0.636;
        MU(l-i12-i8,l-i8-i9) = 0.42400000000000004;
        MU(l-i4-i8,l-i8-i12) = 1.06;
        MU(l-i9-i8,l-i8-i12) = 0.636;
        MU(l-i9-i8,l-i8-i4) = 0.42400000000000004;
        MU(l-i12-i8,l-i8-i4) = 1.06;
        MU(l-i12-i8,l-i8-s13) = 0.636;
        MU(l-i4-i8,l-i8-s13) = 0.42400000000000004;
        MU(l-i8-i9,l-i9-i10) = 1.06;
        MU(l-i8-i9,l-i9-i5) = 0.636;
        MU(l-i8-i9,l-i9-i13) = 0.42400000000000004;
        MU(l-i10-i9,l-i9-i8) = 1.06;
        MU(l-i5-i9,l-i9-i10) = 0.636;
        MU(l-i13-i9,l-i9-i10) = 0.42400000000000004;
        MU(l-i5-i9,l-i9-i13) = 1.06;
        MU(l-i10-i9,l-i9-i13) = 0.636;
        MU(l-i10-i9,l-i9-i5) = 0.42400000000000004;
        MU(l-i13-i9,l-i9-i8) = 1.06;
        MU(l-i13-i9,l-i9-i5) = 0.636;
        MU(l-i5-i9,l-i9-i8) = 0.42400000000000004;
        MU(l-i9-i10,l-i10-i11) = 1.06;
        MU(l-i9-i10,l-i10-i6) = 0.636;
        MU(l-i9-i10,l-i10-i14) = 0.42400000000000004;
        MU(l-i11-i10,l-i10-i9) = 1.06;
        MU(l-i6-i10,l-i10-i11) = 0.636;
        MU(l-i14-i10,l-i10-i11) = 0.42400000000000004;
        MU(l-i6-i10,l-i10-i14) = 1.06;
        MU(l-i11-i10,l-i10-i14) = 0.636;
        MU(l-i11-i10,l-i10-i6) = 0.42400000000000004;
        MU(l-i14-i10,l-i10-i9) = 1.06;
        MU(l-i14-i10,l-i10-i6) = 0.636;
        MU(l-i6-i10,l-i10-i9) = 0.42400000000000004;
        MU(l-i10-i11,l-i11-s6) = 1.06;
        MU(l-i10-i11,l-i11-i7) = 0.636;
        MU(l-i10-i11,l-i11-i15) = 0.42400000000000004;
        MU(l-s6-i11,l-i11-i10) = 1.06;
        MU(l-i7-i11,l-i11-s6) = 0.636;
        MU(l-i15-i11,l-i11-s6) = 0.42400000000000004;
        MU(l-i7-i11,l-i11-i15) = 1.06;
        MU(l-s6-i11,l-i11-i15) = 0.636;
        MU(l-s6-i11,l-i11-i7) = 0.42400000000000004;
        MU(l-i15-i11,l-i11-i7) = 1.06;
        MU(l-i15-i11,l-i11-i10) = 0.636;
        MU(l-i7-i11,l-i11-i10) = 0.42400000000000004;
        MU(l-s12-i12,l-i12-i13) = 1.06;
        MU(l-s12-i12,l-i12-i8) = 0.636;
        MU(l-s12-i12,l-i12-s11) = 0.42400000000000004;
        MU(l-i13-i12,l-i12-s12) = 1.06;
        MU(l-i8-i12,l-i12-i13) = 0.636;
        MU(l-s11-i12,l-i12-i13) = 0.42400000000000004;
        MU(l-i8-i12,l-i12-s11) = 1.06;
        MU(l-i13-i12,l-i12-s11) = 0.636;
        MU(l-i13-i12,l-i12-i8) = 0.42400000000000004;
        MU(l-s11-i12,l-i12-i8) = 1.06;
        MU(l-s11-i12,l-i12-s12) = 0.636;
        MU(l-i8-i12,l-i12-s12) = 0.42400000000000004;
        MU(l-i12-i13,l-i13-i14) = 1.06;
        MU(l-i12-i13,l-i13-i9) = 0.636;
        MU(l-i12-i13,l-i13-s10) = 0.42400000000000004;
        MU(l-i14-i13,l-i13-i12) = 1.06;
        MU(l-i9-i13,l-i13-i14) = 0.636;
        MU(l-s10-i13,l-i13-i14) = 0.42400000000000004;
        MU(l-i9-i13,l-i13-s10) = 1.06;
        MU(l-i14-i13,l-i13-s10) = 0.636;
        MU(l-i14-i13,l-i13-i9) = 0.42400000000000004;
        MU(l-s10-i13,l-i13-i9) = 1.06;
        MU(l-s10-i13,l-i13-i12) = 0.636;
        MU(l-i9-i13,l-i13-i12) = 0.42400000000000004;
        MU(l-i13-i14,l-i14-i10) = 1.06;
        MU(l-i13-i14,l-i14-i15) = 0.636;
        MU(l-i13-i14,l-i14-s9) = 0.42400000000000004;
        MU(l-i15-i14,l-i14-i13) = 1.06;
        MU(l-i10-i14,l-i14-i15) = 0.636;
        MU(l-s9-i14,l-i14-i15) = 0.42400000000000004;
        MU(l-i10-i14,l-i14-s9) = 1.06;
        MU(l-i15-i14,l-i14-s9) = 0.636;
        MU(l-i15-i14,l-i14-i10) = 0.42400000000000004;
        MU(l-s9-i14,l-i14-i10) = 1.06;
        MU(l-s9-i14,l-i14-i13) = 0.636;
        MU(l-i10-i14,l-i14-i13) = 0.42400000000000004;
        MU(l-i14-i15,l-i15-i11) = 1.06;
        MU(l-i14-i15,l-i15-s7) = 0.636;
        MU(l-i14-i15,l-i15-s8) = 0.42400000000000004;
        MU(l-s7-i15,l-i15-i14) = 1.06;
        MU(l-i11-i15,l-i15-s7) = 0.636;
        MU(l-s8-i15,l-i15-s7) = 0.42400000000000004;
        MU(l-i11-i15,l-i15-s8) = 1.06;
        MU(l-s7-i15,l-i15-s8) = 0.636;
        MU(l-s7-i15,l-i15-i11) = 0.42400000000000004;
        MU(l-s8-i15,l-i15-i11) = 1.06;
        MU(l-s8-i15,l-i15-i14) = 0.636;
        MU(l-i11-i15,l-i15-i14) = 0.42400000000000004;
        //turn probabilities
        BETA(l-s15-i0,l-i0-i1) = 0.7333336234439796;
        BETA(l-s15-i0,l-i0-s0) = 0.1666663765560204;
        BETA(l-s15-i0,l-i0-i4) = 0.10000000000000003;
        BETA(l-s0-i0,l-i0-i1) = 0.7592435993334097;
        BETA(l-i1-i0,l-i0-s15) = 0.1407564006665903;
        BETA(l-i4-i0,l-i0-i1) = 0.10000000000000003;
        BETA(l-s0-i0,l-i0-i4) = 0.7926225611290182;
        BETA(l-i1-i0,l-i0-i4) = 0.10737743887098175;
        BETA(l-i1-i0,l-i0-s0) = 0.10000000000000006;
        BETA(l-i4-i0,l-i0-s15) = 0.6976214646517933;
        BETA(l-i4-i0,l-i0-s0) = 0.20237853534820668;
        BETA(l-s0-i0,l-i0-s15) = 0.1;
        BETA(l-i0-i1,l-i1-i2) = 0.780986929489452;
        BETA(l-i0-i1,l-i1-s1) = 0.11901307051054788;
        BETA(l-i0-i1,l-i1-i5) = 0.10000000000000009;
        BETA(l-i2-i1,l-i1-i0) = 0.6983128051261828;
        BETA(l-s1-i1,l-i1-i2) = 0.20168719487381723;
        BETA(l-i5-i1,l-i1-i2) = 0.1;
        BETA(l-s1-i1,l-i1-i5) = 0.6798817991139646;
        BETA(l-i2-i1,l-i1-i5) = 0.22011820088603537;
        BETA(l-i2-i1,l-i1-s1) = 0.1;
        BETA(l-i5-i1,l-i1-s1) = 0.633422523505001;
        BETA(l-i5-i1,l-i1-i0) = 0.266577476494999;
        BETA(l-s1-i1,l-i1-i0) = 0.10000000000000003;
        BETA(l-i1-i2,l-i2-i3) = 0.7777303305564245;
        BETA(l-i1-i2,l-i2-s2) = 0.12226966944357545;
        BETA(l-i1-i2,l-i2-i6) = 0.10000000000000006;
        BETA(l-i3-i2,l-i2-i1) = 0.6386218214982814;
        BETA(l-s2-i2,l-i2-i3) = 0.26137817850171857;
        BETA(l-i6-i2,l-i2-i3) = 0.10000000000000003;
        BETA(l-s2-i2,l-i2-i6) = 0.6502451217617409;
        BETA(l-i3-i2,l-i2-i6) = 0.24975487823825915;
        BETA(l-i3-i2,l-i2-s2) = 0.09999999999999998;
        BETA(l-i6-i2,l-i2-s2) = 0.6729256648189863;
        BETA(l-i6-i2,l-i2-i1) = 0.22707433518101372;
        BETA(l-s2-i2,l-i2-i1) = 0.09999999999999998;
        BETA(l-i2-i3,l-i3-s4) = 0.7378143535102817;
        BETA(l-i2-i3,l-i3-s3) = 0.16218564648971823;
        BETA(l-i2-i3,l-i3-i7) = 0.10000000000000009;
        BETA(l-s4-i3,l-i3-i2) = 0.7425107137403264;
        BETA(l-s3-i3,l-i3-s4) = 0.15748928625967357;
        BETA(l-i7-i3,l-i3-s4) = 0.10000000000000003;
        BETA(l-s3-i3,l-i3-i7) = 0.6515600928122309;
        BETA(l-s4-i3,l-i3-i7) = 0.24843990718776898;
        BETA(l-s4-i3,l-i3-s3) = 0.10000000000000009;
        BETA(l-i7-i3,l-i3-s3) = 0.6561037802519004;
        BETA(l-i7-i3,l-i3-i2) = 0.24389621974809955;
        BETA(l-s3-i3,l-i3-i2) = 0.10000000000000003;
        BETA(l-s14-i4,l-i4-i5) = 0.7494097801427381;
        BETA(l-s14-i4,l-i4-i0) = 0.15059021985726184;
        BETA(l-s14-i4,l-i4-i8) = 0.10000000000000009;
        BETA(l-i5-i4,l-i4-s14) = 0.6110807372219627;
        BETA(l-i0-i4,l-i4-i5) = 0.28891926277803726;
        BETA(l-i8-i4,l-i4-i5) = 0.10000000000000009;
        BETA(l-i0-i4,l-i4-i8) = 0.6056320485118488;
        BETA(l-i5-i4,l-i4-i8) = 0.2943679514881511;
        BETA(l-i5-i4,l-i4-i0) = 0.10000000000000009;
        BETA(l-i8-i4,l-i4-i0) = 0.644066814092239;
        BETA(l-i8-i4,l-i4-s14) = 0.255933185907761;
        BETA(l-i0-i4,l-i4-s14) = 0.10000000000000003;
        BETA(l-i4-i5,l-i5-i6) = 0.7204857805884235;
        BETA(l-i4-i5,l-i5-i1) = 0.17951421941157653;
        BETA(l-i4-i5,l-i5-i9) = 0.09999999999999998;
        BETA(l-i6-i5,l-i5-i4) = 0.7006631833021679;
        BETA(l-i1-i5,l-i5-i6) = 0.19933681669783207;
        BETA(l-i9-i5,l-i5-i6) = 0.1;
        BETA(l-i1-i5,l-i5-i9) = 0.7425125801047074;
        BETA(l-i6-i5,l-i5-i9) = 0.15748741989529247;
        BETA(l-i6-i5,l-i5-i1) = 0.10000000000000009;
        BETA(l-i9-i5,l-i5-i1) = 0.6831845320244367;
        BETA(l-i9-i5,l-i5-i4) = 0.21681546797556328;
        BETA(l-i1-i5,l-i5-i4) = 0.09999999999999998;
        BETA(l-i5-i6,l-i6-i7) = 0.7277018559181367;
        BETA(l-i5-i6,l-i6-i2) = 0.1722981440818632;
        BETA(l-i5-i6,l-i6-i10) = 0.10000000000000006;
        BETA(l-i7-i6,l-i6-i5) = 0.7415920564426142;
        BETA(l-i2-i6,l-i6-i7) = 0.15840794355738577;
        BETA(l-i10-i6,l-i6-i7) = 0.10000000000000006;
        BETA(l-i2-i6,l-i6-i10) = 0.6842575137918171;
        BETA(l-i7-i6,l-i6-i10) = 0.21574248620818284;
        BETA(l-i7-i6,l-i6-i2) = 0.10000000000000006;
        BETA(l-i10-i6,l-i6-i2) = 0.6747446410018231;
        BETA(l-i10-i6,l-i6-i5) = 0.22525535899817686;
        BETA(l-i2-i6,l-i6-i5) = 0.10000000000000006;
        BETA(l-i6-i7,l-i7-s5) = 0.7495455152383981;
        BETA(l-i6-i7,l-i7-i3) = 0.15045448476160192;
        BETA(l-i6-i7,l-i7-i11) = 0.1;
        BETA(l-s5-i7,l-i7-i6) = 0.7345355723844688;
        BETA(l-i3-i7,l-i7-s5) = 0.1654644276155312;
        BETA(l-i11-i7,l-i7-s5) = 0.10000000000000003;
        BETA(l-i3-i7,l-i7-i11) = 0.6167397357386937;
        BETA(l-s5-i7,l-i7-i11) = 0.28326026426130624;
        BETA(l-s5-i7,l-i7-i3) = 0.10000000000000009;
        BETA(l-i11-i7,l-i7-i3) = 0.6820464302569268;
        BETA(l-i11-i7,l-i7-i6) = 0.21795356974307314;
        BETA(l-i3-i7,l-i7-i6) = 0.10000000000000006;
        BETA(l-s13-i8,l-i8-i9) = 0.7805589890466998;
        BETA(l-s13-i8,l-i8-i4) = 0.11944101095330012;
        BETA(l-s13-i8,l-i8-i12) = 0.10000000000000003;
        BETA(l-i9-i8,l-i8-s13) = 0.604476244066195;
        BETA(l-i4-i8,l-i8-i9) = 0.29552375593380487;
        BETA(l-i12-i8,l-i8-i9) = 0.10000000000000009;
        BETA(l-i4-i8,l-i8-i12) = 0.6630981499663916;
        BETA(l-i9-i8,l-i8-i12) = 0.23690185003360836;
        BETA(l-i9-i8,l-i8-i4) = 0.10000000000000003;
        BETA(l-i12-i8,l-i8-i4) = 0.7698213888861032;
        BETA(l-i12-i8,l-i8-s13) = 0.13017861111389684;
        BETA(l-i4-i8,l-i8-s13) = 0.09999999999999998;
        BETA(l-i8-i9,l-i9-i10) = 0.6633441688668683;
        BETA(l-i8-i9,l-i9-i5) = 0.23665583113313163;
        BETA(l-i8-i9,l-i9-i13) = 0.10000000000000006;
        BETA(l-i10-i9,l-i9-i8) = 0.7640044716243958;
        BETA(l-i5-i9,l-i9-i10) = 0.13599552837560422;
        BETA(l-i13-i9,l-i9-i10) = 0.1;
        BETA(l-i5-i9,l-i9-i13) = 0.6103132246617656;
        BETA(l-i10-i9,l-i9-i13) = 0.2896867753382343;
        BETA(l-i10-i9,l-i9-i5) = 0.10000000000000009;
        BETA(l-i13-i9,l-i9-i8) = 0.7582175225228486;
        BETA(l-i13-i9,l-i9-i5) = 0.14178247747715142;
        BETA(l-i5-i9,l-i9-i8) = 0.1;
        BETA(l-i9-i10,l-i10-i11) = 0.7038933418802358;
        BETA(l-i9-i10,l-i10-i6) = 0.19610665811976424;
        BETA(l-i9-i10,l-i10-i14) = 0.09999999999999998;
        BETA(l-i11-i10,l-i10-i9) = 0.7449474672107805;
        BETA(l-i6-i10,l-i10-i11) = 0.1550525327892194;
        BETA(l-i14-i10,l-i10-i11) = 0.10000000000000006;
        BETA(l-i6-i10,l-i10-i14) = 0.7233528237457335;
        BETA(l-i11-i10,l-i10-i14) = 0.17664717625426643;
        BETA(l-i11-i10,l-i10-i6) = 0.10000000000000006;
        BETA(l-i14-i10,l-i10-i9) = 0.7841094948697259;
        BETA(l-i14-i10,l-i10-i6) = 0.11589050513027406;
        BETA(l-i6-i10,l-i10-i9) = 0.10000000000000002;
        BETA(l-i10-i11,l-i11-s6) = 0.7809322620603373;
        BETA(l-i10-i11,l-i11-i7) = 0.11906773793966266;
        BETA(l-i10-i11,l-i11-i15) = 0.10000000000000006;
        BETA(l-s6-i11,l-i11-i10) = 0.7835584912503588;
        BETA(l-i7-i11,l-i11-s6) = 0.1164415087496412;
        BETA(l-i15-i11,l-i11-s6) = 0.09999999999999999;
        BETA(l-i7-i11,l-i11-i15) = 0.6150372669316547;
        BETA(l-s6-i11,l-i11-i15) = 0.28496273306834524;
        BETA(l-s6-i11,l-i11-i7) = 0.10000000000000003;
        BETA(l-i15-i11,l-i11-i7) = 0.7849624689552421;
        BETA(l-i15-i11,l-i11-i10) = 0.11503753104475781;
        BETA(l-i7-i11,l-i11-i10) = 0.10000000000000006;
        BETA(l-s12-i12,l-i12-i13) = 0.7273289621204649;
        BETA(l-s12-i12,l-i12-i8) = 0.17267103787953503;
        BETA(l-s12-i12,l-i12-s11) = 0.10000000000000003;
        BETA(l-i13-i12,l-i12-s12) = 0.777264999692605;
        BETA(l-i8-i12,l-i12-i13) = 0.12273500030739495;
        BETA(l-s11-i12,l-i12-i13) = 0.10000000000000006;
        BETA(l-i8-i12,l-i12-s11) = 0.6154557960440379;
        BETA(l-i13-i12,l-i12-s11) = 0.28454420395596214;
        BETA(l-i13-i12,l-i12-i8) = 0.09999999999999998;
        BETA(l-s11-i12,l-i12-i8) = 0.7427709983697609;
        BETA(l-s11-i12,l-i12-s12) = 0.1572290016302391;
        BETA(l-i8-i12,l-i12-s12) = 0.1;
        BETA(l-i12-i13,l-i13-i14) = 0.7766068458752199;
        BETA(l-i12-i13,l-i13-i9) = 0.12339315412478012;
        BETA(l-i12-i13,l-i13-s10) = 0.09999999999999999;
        BETA(l-i14-i13,l-i13-i12) = 0.6925886882023764;
        BETA(l-i9-i13,l-i13-i14) = 0.20741131179762362;
        BETA(l-s10-i13,l-i13-i14) = 0.09999999999999998;
        BETA(l-i9-i13,l-i13-s10) = 0.7239670666727215;
        BETA(l-i14-i13,l-i13-s10) = 0.17603293332727854;
        BETA(l-i14-i13,l-i13-i9) = 0.09999999999999998;
        BETA(l-s10-i13,l-i13-i9) = 0.6326488032272569;
        BETA(l-s10-i13,l-i13-i12) = 0.2673511967727431;
        BETA(l-i9-i13,l-i13-i12) = 0.09999999999999998;
        BETA(l-i13-i14,l-i14-i10) = 0.6083267997073378;
        BETA(l-i13-i14,l-i14-i15) = 0.29167320029266214;
        BETA(l-i13-i14,l-i14-s9) = 0.10000000000000003;
        BETA(l-i15-i14,l-i14-i13) = 0.752312563706805;
        BETA(l-i10-i14,l-i14-i15) = 0.14768743629319497;
        BETA(l-s9-i14,l-i14-i15) = 0.10000000000000003;
        BETA(l-i10-i14,l-i14-s9) = 0.7903168457627816;
        BETA(l-i15-i14,l-i14-s9) = 0.10968315423721833;
        BETA(l-i15-i14,l-i14-i10) = 0.10000000000000006;
        BETA(l-s9-i14,l-i14-i10) = 0.6289968656366584;
        BETA(l-s9-i14,l-i14-i13) = 0.27100313436334167;
        BETA(l-i10-i14,l-i14-i13) = 0.09999999999999998;
        BETA(l-i14-i15,l-i15-i11) = 0.6219189091812173;
        BETA(l-i14-i15,l-i15-s7) = 0.27808109081878274;
        BETA(l-i14-i15,l-i15-s8) = 0.09999999999999998;
        BETA(l-s7-i15,l-i15-i14) = 0.7729662879034969;
        BETA(l-i11-i15,l-i15-s7) = 0.12703371209650316;
        BETA(l-s8-i15,l-i15-s7) = 0.09999999999999998;
        BETA(l-i11-i15,l-i15-s8) = 0.7244690944190781;
        BETA(l-s7-i15,l-i15-s8) = 0.17553090558092183;
        BETA(l-s7-i15,l-i15-i11) = 0.10000000000000003;
        BETA(l-s8-i15,l-i15-i11) = 0.6478715871788256;
        BETA(l-s8-i15,l-i15-i14) = 0.2521284128211744;
        BETA(l-i11-i15,l-i15-i14) = 0.09999999999999998;
        //link lengths
        Dl(l-i0-s0) = 278.0;
        Dl(l-i0-i1) = 204.0;
        Dl(l-i0-i4) = 155.0;
        Dl(l-i0-s15) = 331.0;
        Dl(l-i1-s1) = 278.0;
        Dl(l-i1-i2) = 249.0;
        Dl(l-i1-i5) = 155.0;
        Dl(l-i1-i0) = 204.0;
        Dl(l-i2-s2) = 278.0;
        Dl(l-i2-i3) = 207.0;
        Dl(l-i2-i6) = 155.0;
        Dl(l-i2-i1) = 249.0;
        Dl(l-i3-s3) = 278.0;
        Dl(l-i3-s4) = 295.0;
        Dl(l-i3-i7) = 155.0;
        Dl(l-i3-i2) = 207.0;
        Dl(l-i4-i0) = 155.0;
        Dl(l-i4-i5) = 204.0;
        Dl(l-i4-i8) = 225.0;
        Dl(l-i4-s14) = 331.0;
        Dl(l-i5-i1) = 155.0;
        Dl(l-i5-i6) = 249.0;
        Dl(l-i5-i9) = 225.0;
        Dl(l-i5-i4) = 204.0;
        Dl(l-i6-i2) = 155.0;
        Dl(l-i6-i7) = 207.0;
        Dl(l-i6-i10) = 225.0;
        Dl(l-i6-i5) = 249.0;
        Dl(l-i7-i3) = 155.0;
        Dl(l-i7-s5) = 295.0;
        Dl(l-i7-i11) = 225.0;
        Dl(l-i7-i6) = 207.0;
        Dl(l-i8-i4) = 225.0;
        Dl(l-i8-i9) = 204.0;
        Dl(l-i8-i12) = 242.0;
        Dl(l-i8-s13) = 331.0;
        Dl(l-i9-i5) = 225.0;
        Dl(l-i9-i10) = 249.0;
        Dl(l-i9-i13) = 242.0;
        Dl(l-i9-i8) = 204.0;
        Dl(l-i10-i6) = 225.0;
        Dl(l-i10-i11) = 207.0;
        Dl(l-i10-i14) = 242.0;
        Dl(l-i10-i9) = 249.0;
        Dl(l-i11-i7) = 225.0;
        Dl(l-i11-s6) = 295.0;
        Dl(l-i11-i15) = 242.0;
        Dl(l-i11-i10) = 207.0;
        Dl(l-i12-i8) = 242.0;
        Dl(l-i12-i13) = 204.0;
        Dl(l-i12-s11) = 273.0;
        Dl(l-i12-s12) = 331.0;
        Dl(l-i13-i9) = 242.0;
        Dl(l-i13-i14) = 249.0;
        Dl(l-i13-s10) = 273.0;
        Dl(l-i13-i12) = 204.0;
        Dl(l-i14-i10) = 242.0;
        Dl(l-i14-i15) = 207.0;
        Dl(l-i14-s9) = 273.0;
        Dl(l-i14-i13) = 249.0;
        Dl(l-i15-i11) = 242.0;
        Dl(l-i15-s7) = 295.0;
        Dl(l-i15-s8) = 273.0;
        Dl(l-i15-i14) = 207.0;
        Dl(l-s0-i0) = 278.0;
        Dl(l-s11-i12) = 273.0;
        Dl(l-s1-i1) = 278.0;
        Dl(l-s10-i13) = 273.0;
        Dl(l-s2-i2) = 278.0;
        Dl(l-s9-i14) = 273.0;
        Dl(l-s3-i3) = 278.0;
        Dl(l-s8-i15) = 273.0;
        Dl(l-s15-i0) = 331.0;
        Dl(l-s4-i3) = 295.0;
        Dl(l-s14-i4) = 331.0;
        Dl(l-s5-i7) = 295.0;
        Dl(l-s13-i8) = 331.0;
        Dl(l-s6-i11) = 295.0;
        Dl(l-s12-i12) = 331.0;
        Dl(l-s7-i15) = 295.0;
        //source arrival rates
        SOURCE-ARRIVAL-RATE(l-s0-i0) = 0.39;
        SOURCE-ARRIVAL-RATE(l-s11-i12) = 0.28;
        SOURCE-ARRIVAL-RATE(l-s1-i1) = 0.37;
        SOURCE-ARRIVAL-RATE(l-s10-i13) = 0.3;
        SOURCE-ARRIVAL-RATE(l-s2-i2) = 0.37;
        SOURCE-ARRIVAL-RATE(l-s9-i14) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s3-i3) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s8-i15) = 0.36;
        SOURCE-ARRIVAL-RATE(l-s15-i0) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s4-i3) = 0.4;
        SOURCE-ARRIVAL-RATE(l-s14-i4) = 0.32;
        SOURCE-ARRIVAL-RATE(l-s5-i7) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s13-i8) = 0.26;
        SOURCE-ARRIVAL-RATE(l-s6-i11) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s12-i12) = 0.25;
        SOURCE-ARRIVAL-RATE(l-s7-i15) = 0.36;
        
        //intersection i0
        //turns
        TURN(l-i1-i0,l-i0-s0);
        TURN(l-i1-i0,l-i0-s15);
        TURN(l-i1-i0,l-i0-i4);
        TURN(l-s0-i0,l-i0-s15);
        TURN(l-s0-i0,l-i0-i4);
        TURN(l-s0-i0,l-i0-i1);
        TURN(l-s15-i0,l-i0-i4);
        TURN(l-s15-i0,l-i0-i1);
        TURN(l-s15-i0,l-i0-s0);
        TURN(l-i4-i0,l-i0-i1);
        TURN(l-i4-i0,l-i0-s0);
        TURN(l-i4-i0,l-i0-s15);
        //link-to
        LINK-TO(l-i1-i0,i0);
        LINK-TO(l-s0-i0,i0);
        LINK-TO(l-s15-i0,i0);
        LINK-TO(l-i4-i0,i0);
        //link-from
        LINK-FROM(i0,l-i0-i1);
        LINK-FROM(i0,l-i0-s0);
        LINK-FROM(i0,l-i0-s15);
        LINK-FROM(i0,l-i0-i4);
        //phase properties
        PHASE-MIN(i0) = 7;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l-i1-i0,l-i0-i4,@WEST-EAST-LEFT);
        GREEN(l-s15-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s15,@WEST-EAST-THROUGH);
        GREEN(l-s15-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i0,l-i0-s15,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-s0-i0,l-i0-s15,@WEST-EAST-LEFT);
        GREEN(l-s0-i0,l-i0-s15,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s15,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s15,@NORTH-SOUTH-THROUGH);
        GREEN(l-s15-i0,l-i0-i4,@WEST-EAST-LEFT);
        GREEN(l-s15-i0,l-i0-i4,@WEST-EAST-THROUGH);
        GREEN(l-s15-i0,l-i0-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-s15-i0,l-i0-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i0,l-i0-i1,@WEST-EAST-LEFT);
        GREEN(l-i4-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-i4-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i0,l-i0-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED2);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED3);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED4);
        GREEN(l-s0-i0,l-i0-s15,@ALL-RED);
        GREEN(l-s0-i0,l-i0-s15,@ALL-RED2);
        GREEN(l-s0-i0,l-i0-s15,@ALL-RED3);
        GREEN(l-s0-i0,l-i0-s15,@ALL-RED4);
        GREEN(l-s15-i0,l-i0-i4,@ALL-RED);
        GREEN(l-s15-i0,l-i0-i4,@ALL-RED2);
        GREEN(l-s15-i0,l-i0-i4,@ALL-RED3);
        GREEN(l-s15-i0,l-i0-i4,@ALL-RED4);
        GREEN(l-i4-i0,l-i0-i1,@ALL-RED);
        GREEN(l-i4-i0,l-i0-i1,@ALL-RED2);
        GREEN(l-i4-i0,l-i0-i1,@ALL-RED3);
        GREEN(l-i4-i0,l-i0-i1,@ALL-RED4);
        
        //intersection i1
        //turns
        TURN(l-i2-i1,l-i1-s1);
        TURN(l-i2-i1,l-i1-i0);
        TURN(l-i2-i1,l-i1-i5);
        TURN(l-s1-i1,l-i1-i0);
        TURN(l-s1-i1,l-i1-i5);
        TURN(l-s1-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-i5);
        TURN(l-i0-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-s1);
        TURN(l-i5-i1,l-i1-i2);
        TURN(l-i5-i1,l-i1-s1);
        TURN(l-i5-i1,l-i1-i0);
        //link-to
        LINK-TO(l-i2-i1,i1);
        LINK-TO(l-s1-i1,i1);
        LINK-TO(l-i0-i1,i1);
        LINK-TO(l-i5-i1,i1);
        //link-from
        LINK-FROM(i1,l-i1-i2);
        LINK-FROM(i1,l-i1-s1);
        LINK-FROM(i1,l-i1-i0);
        LINK-FROM(i1,l-i1-i5);
        //phase properties
        PHASE-MIN(i1) = 7;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l-i2-i1,l-i1-i5,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i1,l-i1-i5,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-i5,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i1,l-i1-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i1,l-i1-i2,@WEST-EAST-LEFT);
        GREEN(l-i5-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-i5-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i1,l-i1-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED2);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED3);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED4);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED2);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED3);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED4);
        GREEN(l-i0-i1,l-i1-i5,@ALL-RED);
        GREEN(l-i0-i1,l-i1-i5,@ALL-RED2);
        GREEN(l-i0-i1,l-i1-i5,@ALL-RED3);
        GREEN(l-i0-i1,l-i1-i5,@ALL-RED4);
        GREEN(l-i5-i1,l-i1-i2,@ALL-RED);
        GREEN(l-i5-i1,l-i1-i2,@ALL-RED2);
        GREEN(l-i5-i1,l-i1-i2,@ALL-RED3);
        GREEN(l-i5-i1,l-i1-i2,@ALL-RED4);
        
        //intersection i2
        //turns
        TURN(l-i3-i2,l-i2-s2);
        TURN(l-i3-i2,l-i2-i1);
        TURN(l-i3-i2,l-i2-i6);
        TURN(l-s2-i2,l-i2-i1);
        TURN(l-s2-i2,l-i2-i6);
        TURN(l-s2-i2,l-i2-i3);
        TURN(l-i1-i2,l-i2-i6);
        TURN(l-i1-i2,l-i2-i3);
        TURN(l-i1-i2,l-i2-s2);
        TURN(l-i6-i2,l-i2-i3);
        TURN(l-i6-i2,l-i2-s2);
        TURN(l-i6-i2,l-i2-i1);
        //link-to
        LINK-TO(l-i3-i2,i2);
        LINK-TO(l-s2-i2,i2);
        LINK-TO(l-i1-i2,i2);
        LINK-TO(l-i6-i2,i2);
        //link-from
        LINK-FROM(i2,l-i2-i3);
        LINK-FROM(i2,l-i2-s2);
        LINK-FROM(i2,l-i2-i1);
        LINK-FROM(i2,l-i2-i6);
        //phase properties
        PHASE-MIN(i2) = 7;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l-i3-i2,l-i2-i6,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-i3-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-i3,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-i3-i2,l-i2-s2,@WEST-EAST-THROUGH);
        GREEN(l-i3-i2,l-i2-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i2,l-i2-i6,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-i6,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i2,l-i2-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i2,l-i2-i3,@WEST-EAST-LEFT);
        GREEN(l-i6-i2,l-i2-i3,@WEST-EAST-THROUGH);
        GREEN(l-i6-i2,l-i2-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i2,l-i2-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i2,l-i2-s2,@ALL-RED);
        GREEN(l-i3-i2,l-i2-s2,@ALL-RED2);
        GREEN(l-i3-i2,l-i2-s2,@ALL-RED3);
        GREEN(l-i3-i2,l-i2-s2,@ALL-RED4);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED2);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED3);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED4);
        GREEN(l-i1-i2,l-i2-i6,@ALL-RED);
        GREEN(l-i1-i2,l-i2-i6,@ALL-RED2);
        GREEN(l-i1-i2,l-i2-i6,@ALL-RED3);
        GREEN(l-i1-i2,l-i2-i6,@ALL-RED4);
        GREEN(l-i6-i2,l-i2-i3,@ALL-RED);
        GREEN(l-i6-i2,l-i2-i3,@ALL-RED2);
        GREEN(l-i6-i2,l-i2-i3,@ALL-RED3);
        GREEN(l-i6-i2,l-i2-i3,@ALL-RED4);
        
        //intersection i3
        //turns
        TURN(l-s4-i3,l-i3-s3);
        TURN(l-s4-i3,l-i3-i2);
        TURN(l-s4-i3,l-i3-i7);
        TURN(l-s3-i3,l-i3-i2);
        TURN(l-s3-i3,l-i3-i7);
        TURN(l-s3-i3,l-i3-s4);
        TURN(l-i2-i3,l-i3-i7);
        TURN(l-i2-i3,l-i3-s4);
        TURN(l-i2-i3,l-i3-s3);
        TURN(l-i7-i3,l-i3-s4);
        TURN(l-i7-i3,l-i3-s3);
        TURN(l-i7-i3,l-i3-i2);
        //link-to
        LINK-TO(l-s4-i3,i3);
        LINK-TO(l-s3-i3,i3);
        LINK-TO(l-i2-i3,i3);
        LINK-TO(l-i7-i3,i3);
        //link-from
        LINK-FROM(i3,l-i3-s4);
        LINK-FROM(i3,l-i3-s3);
        LINK-FROM(i3,l-i3-i2);
        LINK-FROM(i3,l-i3-i7);
        //phase properties
        PHASE-MIN(i3) = 7;
        PHASE-MAX(i3) = 60;
        PHASE-ALL-RED-DUR(i3) = 4;
        //green turns
        GREEN(l-s4-i3,l-i3-i7,@WEST-EAST-LEFT);
        GREEN(l-i2-i3,l-i3-s3,@WEST-EAST-LEFT);
        GREEN(l-s4-i3,l-i3-i2,@WEST-EAST-THROUGH);
        GREEN(l-i2-i3,l-i3-s4,@WEST-EAST-THROUGH);
        GREEN(l-s3-i3,l-i3-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i3,l-i3-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i3,l-i3-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i3,l-i3-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i3,l-i3-s3,@WEST-EAST-LEFT);
        GREEN(l-s4-i3,l-i3-s3,@WEST-EAST-THROUGH);
        GREEN(l-s4-i3,l-i3-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i3,l-i3-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i3,l-i3-i2,@WEST-EAST-LEFT);
        GREEN(l-s3-i3,l-i3-i2,@WEST-EAST-THROUGH);
        GREEN(l-s3-i3,l-i3-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i3,l-i3-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i3,l-i3-i7,@WEST-EAST-LEFT);
        GREEN(l-i2-i3,l-i3-i7,@WEST-EAST-THROUGH);
        GREEN(l-i2-i3,l-i3-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i3,l-i3-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i3,l-i3-s4,@WEST-EAST-LEFT);
        GREEN(l-i7-i3,l-i3-s4,@WEST-EAST-THROUGH);
        GREEN(l-i7-i3,l-i3-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i3,l-i3-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED2);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED3);
        GREEN(l-s4-i3,l-i3-s3,@ALL-RED4);
        GREEN(l-s3-i3,l-i3-i2,@ALL-RED);
        GREEN(l-s3-i3,l-i3-i2,@ALL-RED2);
        GREEN(l-s3-i3,l-i3-i2,@ALL-RED3);
        GREEN(l-s3-i3,l-i3-i2,@ALL-RED4);
        GREEN(l-i2-i3,l-i3-i7,@ALL-RED);
        GREEN(l-i2-i3,l-i3-i7,@ALL-RED2);
        GREEN(l-i2-i3,l-i3-i7,@ALL-RED3);
        GREEN(l-i2-i3,l-i3-i7,@ALL-RED4);
        GREEN(l-i7-i3,l-i3-s4,@ALL-RED);
        GREEN(l-i7-i3,l-i3-s4,@ALL-RED2);
        GREEN(l-i7-i3,l-i3-s4,@ALL-RED3);
        GREEN(l-i7-i3,l-i3-s4,@ALL-RED4);
        
        //intersection i4
        //turns
        TURN(l-i5-i4,l-i4-i0);
        TURN(l-i5-i4,l-i4-s14);
        TURN(l-i5-i4,l-i4-i8);
        TURN(l-i0-i4,l-i4-s14);
        TURN(l-i0-i4,l-i4-i8);
        TURN(l-i0-i4,l-i4-i5);
        TURN(l-s14-i4,l-i4-i8);
        TURN(l-s14-i4,l-i4-i5);
        TURN(l-s14-i4,l-i4-i0);
        TURN(l-i8-i4,l-i4-i5);
        TURN(l-i8-i4,l-i4-i0);
        TURN(l-i8-i4,l-i4-s14);
        //link-to
        LINK-TO(l-i5-i4,i4);
        LINK-TO(l-i0-i4,i4);
        LINK-TO(l-s14-i4,i4);
        LINK-TO(l-i8-i4,i4);
        //link-from
        LINK-FROM(i4,l-i4-i5);
        LINK-FROM(i4,l-i4-i0);
        LINK-FROM(i4,l-i4-s14);
        LINK-FROM(i4,l-i4-i8);
        //phase properties
        PHASE-MIN(i4) = 7;
        PHASE-MAX(i4) = 60;
        PHASE-ALL-RED-DUR(i4) = 4;
        //green turns
        GREEN(l-i5-i4,l-i4-i8,@WEST-EAST-LEFT);
        GREEN(l-s14-i4,l-i4-i0,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-s14,@WEST-EAST-THROUGH);
        GREEN(l-s14-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i0-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i4,l-i4-s14,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i4,l-i4-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i4,l-i4-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i0,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i0,@WEST-EAST-THROUGH);
        GREEN(l-i5-i4,l-i4-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i4,l-i4-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i4,l-i4-s14,@WEST-EAST-LEFT);
        GREEN(l-i0-i4,l-i4-s14,@WEST-EAST-THROUGH);
        GREEN(l-i0-i4,l-i4-s14,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i4,l-i4-s14,@NORTH-SOUTH-THROUGH);
        GREEN(l-s14-i4,l-i4-i8,@WEST-EAST-LEFT);
        GREEN(l-s14-i4,l-i4-i8,@WEST-EAST-THROUGH);
        GREEN(l-s14-i4,l-i4-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-s14-i4,l-i4-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i4,l-i4-i5,@WEST-EAST-LEFT);
        GREEN(l-i8-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i8-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i4,l-i4-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i0,@ALL-RED);
        GREEN(l-i5-i4,l-i4-i0,@ALL-RED2);
        GREEN(l-i5-i4,l-i4-i0,@ALL-RED3);
        GREEN(l-i5-i4,l-i4-i0,@ALL-RED4);
        GREEN(l-i0-i4,l-i4-s14,@ALL-RED);
        GREEN(l-i0-i4,l-i4-s14,@ALL-RED2);
        GREEN(l-i0-i4,l-i4-s14,@ALL-RED3);
        GREEN(l-i0-i4,l-i4-s14,@ALL-RED4);
        GREEN(l-s14-i4,l-i4-i8,@ALL-RED);
        GREEN(l-s14-i4,l-i4-i8,@ALL-RED2);
        GREEN(l-s14-i4,l-i4-i8,@ALL-RED3);
        GREEN(l-s14-i4,l-i4-i8,@ALL-RED4);
        GREEN(l-i8-i4,l-i4-i5,@ALL-RED);
        GREEN(l-i8-i4,l-i4-i5,@ALL-RED2);
        GREEN(l-i8-i4,l-i4-i5,@ALL-RED3);
        GREEN(l-i8-i4,l-i4-i5,@ALL-RED4);
        
        //intersection i5
        //turns
        TURN(l-i6-i5,l-i5-i1);
        TURN(l-i6-i5,l-i5-i4);
        TURN(l-i6-i5,l-i5-i9);
        TURN(l-i1-i5,l-i5-i4);
        TURN(l-i1-i5,l-i5-i9);
        TURN(l-i1-i5,l-i5-i6);
        TURN(l-i4-i5,l-i5-i9);
        TURN(l-i4-i5,l-i5-i6);
        TURN(l-i4-i5,l-i5-i1);
        TURN(l-i9-i5,l-i5-i6);
        TURN(l-i9-i5,l-i5-i1);
        TURN(l-i9-i5,l-i5-i4);
        //link-to
        LINK-TO(l-i6-i5,i5);
        LINK-TO(l-i1-i5,i5);
        LINK-TO(l-i4-i5,i5);
        LINK-TO(l-i9-i5,i5);
        //link-from
        LINK-FROM(i5,l-i5-i6);
        LINK-FROM(i5,l-i5-i1);
        LINK-FROM(i5,l-i5-i4);
        LINK-FROM(i5,l-i5-i9);
        //phase properties
        PHASE-MIN(i5) = 7;
        PHASE-MAX(i5) = 60;
        PHASE-ALL-RED-DUR(i5) = 4;
        //green turns
        GREEN(l-i6-i5,l-i5-i9,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i1,@WEST-EAST-LEFT);
        GREEN(l-i6-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-i6,@WEST-EAST-THROUGH);
        GREEN(l-i1-i5,l-i5-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i9-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i5,l-i5-i9,@NORTH-SOUTH-THROUGH);
        GREEN(l-i9-i5,l-i5-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i5,l-i5-i1,@WEST-EAST-LEFT);
        GREEN(l-i6-i5,l-i5-i1,@WEST-EAST-THROUGH);
        GREEN(l-i6-i5,l-i5-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i5,l-i5-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i5,l-i5-i4,@WEST-EAST-LEFT);
        GREEN(l-i1-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i1-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i5,l-i5-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i5,l-i5-i9,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i9,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-i9,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i5,l-i5-i9,@NORTH-SOUTH-THROUGH);
        GREEN(l-i9-i5,l-i5-i6,@WEST-EAST-LEFT);
        GREEN(l-i9-i5,l-i5-i6,@WEST-EAST-THROUGH);
        GREEN(l-i9-i5,l-i5-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i9-i5,l-i5-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i5,l-i5-i1,@ALL-RED);
        GREEN(l-i6-i5,l-i5-i1,@ALL-RED2);
        GREEN(l-i6-i5,l-i5-i1,@ALL-RED3);
        GREEN(l-i6-i5,l-i5-i1,@ALL-RED4);
        GREEN(l-i1-i5,l-i5-i4,@ALL-RED);
        GREEN(l-i1-i5,l-i5-i4,@ALL-RED2);
        GREEN(l-i1-i5,l-i5-i4,@ALL-RED3);
        GREEN(l-i1-i5,l-i5-i4,@ALL-RED4);
        GREEN(l-i4-i5,l-i5-i9,@ALL-RED);
        GREEN(l-i4-i5,l-i5-i9,@ALL-RED2);
        GREEN(l-i4-i5,l-i5-i9,@ALL-RED3);
        GREEN(l-i4-i5,l-i5-i9,@ALL-RED4);
        GREEN(l-i9-i5,l-i5-i6,@ALL-RED);
        GREEN(l-i9-i5,l-i5-i6,@ALL-RED2);
        GREEN(l-i9-i5,l-i5-i6,@ALL-RED3);
        GREEN(l-i9-i5,l-i5-i6,@ALL-RED4);
        
        //intersection i6
        //turns
        TURN(l-i7-i6,l-i6-i2);
        TURN(l-i7-i6,l-i6-i5);
        TURN(l-i7-i6,l-i6-i10);
        TURN(l-i2-i6,l-i6-i5);
        TURN(l-i2-i6,l-i6-i10);
        TURN(l-i2-i6,l-i6-i7);
        TURN(l-i5-i6,l-i6-i10);
        TURN(l-i5-i6,l-i6-i7);
        TURN(l-i5-i6,l-i6-i2);
        TURN(l-i10-i6,l-i6-i7);
        TURN(l-i10-i6,l-i6-i2);
        TURN(l-i10-i6,l-i6-i5);
        //link-to
        LINK-TO(l-i7-i6,i6);
        LINK-TO(l-i2-i6,i6);
        LINK-TO(l-i5-i6,i6);
        LINK-TO(l-i10-i6,i6);
        //link-from
        LINK-FROM(i6,l-i6-i7);
        LINK-FROM(i6,l-i6-i2);
        LINK-FROM(i6,l-i6-i5);
        LINK-FROM(i6,l-i6-i10);
        //phase properties
        PHASE-MIN(i6) = 7;
        PHASE-MAX(i6) = 60;
        PHASE-ALL-RED-DUR(i6) = 4;
        //green turns
        GREEN(l-i7-i6,l-i6-i10,@WEST-EAST-LEFT);
        GREEN(l-i5-i6,l-i6-i2,@WEST-EAST-LEFT);
        GREEN(l-i7-i6,l-i6-i5,@WEST-EAST-THROUGH);
        GREEN(l-i5-i6,l-i6-i7,@WEST-EAST-THROUGH);
        GREEN(l-i2-i6,l-i6-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i10-i6,l-i6-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i6,l-i6-i10,@NORTH-SOUTH-THROUGH);
        GREEN(l-i10-i6,l-i6-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i6,l-i6-i2,@WEST-EAST-LEFT);
        GREEN(l-i7-i6,l-i6-i2,@WEST-EAST-THROUGH);
        GREEN(l-i7-i6,l-i6-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i6,l-i6-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i6,l-i6-i5,@WEST-EAST-LEFT);
        GREEN(l-i2-i6,l-i6-i5,@WEST-EAST-THROUGH);
        GREEN(l-i2-i6,l-i6-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i6,l-i6-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i6,l-i6-i10,@WEST-EAST-LEFT);
        GREEN(l-i5-i6,l-i6-i10,@WEST-EAST-THROUGH);
        GREEN(l-i5-i6,l-i6-i10,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i6,l-i6-i10,@NORTH-SOUTH-THROUGH);
        GREEN(l-i10-i6,l-i6-i7,@WEST-EAST-LEFT);
        GREEN(l-i10-i6,l-i6-i7,@WEST-EAST-THROUGH);
        GREEN(l-i10-i6,l-i6-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i10-i6,l-i6-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i6,l-i6-i2,@ALL-RED);
        GREEN(l-i7-i6,l-i6-i2,@ALL-RED2);
        GREEN(l-i7-i6,l-i6-i2,@ALL-RED3);
        GREEN(l-i7-i6,l-i6-i2,@ALL-RED4);
        GREEN(l-i2-i6,l-i6-i5,@ALL-RED);
        GREEN(l-i2-i6,l-i6-i5,@ALL-RED2);
        GREEN(l-i2-i6,l-i6-i5,@ALL-RED3);
        GREEN(l-i2-i6,l-i6-i5,@ALL-RED4);
        GREEN(l-i5-i6,l-i6-i10,@ALL-RED);
        GREEN(l-i5-i6,l-i6-i10,@ALL-RED2);
        GREEN(l-i5-i6,l-i6-i10,@ALL-RED3);
        GREEN(l-i5-i6,l-i6-i10,@ALL-RED4);
        GREEN(l-i10-i6,l-i6-i7,@ALL-RED);
        GREEN(l-i10-i6,l-i6-i7,@ALL-RED2);
        GREEN(l-i10-i6,l-i6-i7,@ALL-RED3);
        GREEN(l-i10-i6,l-i6-i7,@ALL-RED4);
        
        //intersection i7
        //turns
        TURN(l-s5-i7,l-i7-i3);
        TURN(l-s5-i7,l-i7-i6);
        TURN(l-s5-i7,l-i7-i11);
        TURN(l-i3-i7,l-i7-i6);
        TURN(l-i3-i7,l-i7-i11);
        TURN(l-i3-i7,l-i7-s5);
        TURN(l-i6-i7,l-i7-i11);
        TURN(l-i6-i7,l-i7-s5);
        TURN(l-i6-i7,l-i7-i3);
        TURN(l-i11-i7,l-i7-s5);
        TURN(l-i11-i7,l-i7-i3);
        TURN(l-i11-i7,l-i7-i6);
        //link-to
        LINK-TO(l-s5-i7,i7);
        LINK-TO(l-i3-i7,i7);
        LINK-TO(l-i6-i7,i7);
        LINK-TO(l-i11-i7,i7);
        //link-from
        LINK-FROM(i7,l-i7-s5);
        LINK-FROM(i7,l-i7-i3);
        LINK-FROM(i7,l-i7-i6);
        LINK-FROM(i7,l-i7-i11);
        //phase properties
        PHASE-MIN(i7) = 7;
        PHASE-MAX(i7) = 60;
        PHASE-ALL-RED-DUR(i7) = 4;
        //green turns
        GREEN(l-s5-i7,l-i7-i11,@WEST-EAST-LEFT);
        GREEN(l-i6-i7,l-i7-i3,@WEST-EAST-LEFT);
        GREEN(l-s5-i7,l-i7-i6,@WEST-EAST-THROUGH);
        GREEN(l-i6-i7,l-i7-s5,@WEST-EAST-THROUGH);
        GREEN(l-i3-i7,l-i7-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-i11-i7,l-i7-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i7,l-i7-i11,@NORTH-SOUTH-THROUGH);
        GREEN(l-i11-i7,l-i7-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i7,l-i7-i3,@WEST-EAST-LEFT);
        GREEN(l-s5-i7,l-i7-i3,@WEST-EAST-THROUGH);
        GREEN(l-s5-i7,l-i7-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i7,l-i7-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i7,l-i7-i6,@WEST-EAST-LEFT);
        GREEN(l-i3-i7,l-i7-i6,@WEST-EAST-THROUGH);
        GREEN(l-i3-i7,l-i7-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i7,l-i7-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i7,l-i7-i11,@WEST-EAST-LEFT);
        GREEN(l-i6-i7,l-i7-i11,@WEST-EAST-THROUGH);
        GREEN(l-i6-i7,l-i7-i11,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i7,l-i7-i11,@NORTH-SOUTH-THROUGH);
        GREEN(l-i11-i7,l-i7-s5,@WEST-EAST-LEFT);
        GREEN(l-i11-i7,l-i7-s5,@WEST-EAST-THROUGH);
        GREEN(l-i11-i7,l-i7-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-i11-i7,l-i7-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i7,l-i7-i3,@ALL-RED);
        GREEN(l-s5-i7,l-i7-i3,@ALL-RED2);
        GREEN(l-s5-i7,l-i7-i3,@ALL-RED3);
        GREEN(l-s5-i7,l-i7-i3,@ALL-RED4);
        GREEN(l-i3-i7,l-i7-i6,@ALL-RED);
        GREEN(l-i3-i7,l-i7-i6,@ALL-RED2);
        GREEN(l-i3-i7,l-i7-i6,@ALL-RED3);
        GREEN(l-i3-i7,l-i7-i6,@ALL-RED4);
        GREEN(l-i6-i7,l-i7-i11,@ALL-RED);
        GREEN(l-i6-i7,l-i7-i11,@ALL-RED2);
        GREEN(l-i6-i7,l-i7-i11,@ALL-RED3);
        GREEN(l-i6-i7,l-i7-i11,@ALL-RED4);
        GREEN(l-i11-i7,l-i7-s5,@ALL-RED);
        GREEN(l-i11-i7,l-i7-s5,@ALL-RED2);
        GREEN(l-i11-i7,l-i7-s5,@ALL-RED3);
        GREEN(l-i11-i7,l-i7-s5,@ALL-RED4);
        
        //intersection i8
        //turns
        TURN(l-i9-i8,l-i8-i4);
        TURN(l-i9-i8,l-i8-s13);
        TURN(l-i9-i8,l-i8-i12);
        TURN(l-i4-i8,l-i8-s13);
        TURN(l-i4-i8,l-i8-i12);
        TURN(l-i4-i8,l-i8-i9);
        TURN(l-s13-i8,l-i8-i12);
        TURN(l-s13-i8,l-i8-i9);
        TURN(l-s13-i8,l-i8-i4);
        TURN(l-i12-i8,l-i8-i9);
        TURN(l-i12-i8,l-i8-i4);
        TURN(l-i12-i8,l-i8-s13);
        //link-to
        LINK-TO(l-i9-i8,i8);
        LINK-TO(l-i4-i8,i8);
        LINK-TO(l-s13-i8,i8);
        LINK-TO(l-i12-i8,i8);
        //link-from
        LINK-FROM(i8,l-i8-i9);
        LINK-FROM(i8,l-i8-i4);
        LINK-FROM(i8,l-i8-s13);
        LINK-FROM(i8,l-i8-i12);
        //phase properties
        PHASE-MIN(i8) = 7;
        PHASE-MAX(i8) = 60;
        PHASE-ALL-RED-DUR(i8) = 4;
        //green turns
        GREEN(l-i9-i8,l-i8-i12,@WEST-EAST-LEFT);
        GREEN(l-s13-i8,l-i8-i4,@WEST-EAST-LEFT);
        GREEN(l-i9-i8,l-i8-s13,@WEST-EAST-THROUGH);
        GREEN(l-s13-i8,l-i8-i9,@WEST-EAST-THROUGH);
        GREEN(l-i4-i8,l-i8-i9,@NORTH-SOUTH-LEFT);
        GREEN(l-i12-i8,l-i8-s13,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i8,l-i8-i12,@NORTH-SOUTH-THROUGH);
        GREEN(l-i12-i8,l-i8-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i9-i8,l-i8-i4,@WEST-EAST-LEFT);
        GREEN(l-i9-i8,l-i8-i4,@WEST-EAST-THROUGH);
        GREEN(l-i9-i8,l-i8-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i9-i8,l-i8-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i8,l-i8-s13,@WEST-EAST-LEFT);
        GREEN(l-i4-i8,l-i8-s13,@WEST-EAST-THROUGH);
        GREEN(l-i4-i8,l-i8-s13,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i8,l-i8-s13,@NORTH-SOUTH-THROUGH);
        GREEN(l-s13-i8,l-i8-i12,@WEST-EAST-LEFT);
        GREEN(l-s13-i8,l-i8-i12,@WEST-EAST-THROUGH);
        GREEN(l-s13-i8,l-i8-i12,@NORTH-SOUTH-LEFT);
        GREEN(l-s13-i8,l-i8-i12,@NORTH-SOUTH-THROUGH);
        GREEN(l-i12-i8,l-i8-i9,@WEST-EAST-LEFT);
        GREEN(l-i12-i8,l-i8-i9,@WEST-EAST-THROUGH);
        GREEN(l-i12-i8,l-i8-i9,@NORTH-SOUTH-LEFT);
        GREEN(l-i12-i8,l-i8-i9,@NORTH-SOUTH-THROUGH);
        GREEN(l-i9-i8,l-i8-i4,@ALL-RED);
        GREEN(l-i9-i8,l-i8-i4,@ALL-RED2);
        GREEN(l-i9-i8,l-i8-i4,@ALL-RED3);
        GREEN(l-i9-i8,l-i8-i4,@ALL-RED4);
        GREEN(l-i4-i8,l-i8-s13,@ALL-RED);
        GREEN(l-i4-i8,l-i8-s13,@ALL-RED2);
        GREEN(l-i4-i8,l-i8-s13,@ALL-RED3);
        GREEN(l-i4-i8,l-i8-s13,@ALL-RED4);
        GREEN(l-s13-i8,l-i8-i12,@ALL-RED);
        GREEN(l-s13-i8,l-i8-i12,@ALL-RED2);
        GREEN(l-s13-i8,l-i8-i12,@ALL-RED3);
        GREEN(l-s13-i8,l-i8-i12,@ALL-RED4);
        GREEN(l-i12-i8,l-i8-i9,@ALL-RED);
        GREEN(l-i12-i8,l-i8-i9,@ALL-RED2);
        GREEN(l-i12-i8,l-i8-i9,@ALL-RED3);
        GREEN(l-i12-i8,l-i8-i9,@ALL-RED4);
        
        //intersection i9
        //turns
        TURN(l-i10-i9,l-i9-i5);
        TURN(l-i10-i9,l-i9-i8);
        TURN(l-i10-i9,l-i9-i13);
        TURN(l-i5-i9,l-i9-i8);
        TURN(l-i5-i9,l-i9-i13);
        TURN(l-i5-i9,l-i9-i10);
        TURN(l-i8-i9,l-i9-i13);
        TURN(l-i8-i9,l-i9-i10);
        TURN(l-i8-i9,l-i9-i5);
        TURN(l-i13-i9,l-i9-i10);
        TURN(l-i13-i9,l-i9-i5);
        TURN(l-i13-i9,l-i9-i8);
        //link-to
        LINK-TO(l-i10-i9,i9);
        LINK-TO(l-i5-i9,i9);
        LINK-TO(l-i8-i9,i9);
        LINK-TO(l-i13-i9,i9);
        //link-from
        LINK-FROM(i9,l-i9-i10);
        LINK-FROM(i9,l-i9-i5);
        LINK-FROM(i9,l-i9-i8);
        LINK-FROM(i9,l-i9-i13);
        //phase properties
        PHASE-MIN(i9) = 7;
        PHASE-MAX(i9) = 60;
        PHASE-ALL-RED-DUR(i9) = 4;
        //green turns
        GREEN(l-i10-i9,l-i9-i13,@WEST-EAST-LEFT);
        GREEN(l-i8-i9,l-i9-i5,@WEST-EAST-LEFT);
        GREEN(l-i10-i9,l-i9-i8,@WEST-EAST-THROUGH);
        GREEN(l-i8-i9,l-i9-i10,@WEST-EAST-THROUGH);
        GREEN(l-i5-i9,l-i9-i10,@NORTH-SOUTH-LEFT);
        GREEN(l-i13-i9,l-i9-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i9,l-i9-i13,@NORTH-SOUTH-THROUGH);
        GREEN(l-i13-i9,l-i9-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i10-i9,l-i9-i5,@WEST-EAST-LEFT);
        GREEN(l-i10-i9,l-i9-i5,@WEST-EAST-THROUGH);
        GREEN(l-i10-i9,l-i9-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i10-i9,l-i9-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i9,l-i9-i8,@WEST-EAST-LEFT);
        GREEN(l-i5-i9,l-i9-i8,@WEST-EAST-THROUGH);
        GREEN(l-i5-i9,l-i9-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i9,l-i9-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i9,l-i9-i13,@WEST-EAST-LEFT);
        GREEN(l-i8-i9,l-i9-i13,@WEST-EAST-THROUGH);
        GREEN(l-i8-i9,l-i9-i13,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i9,l-i9-i13,@NORTH-SOUTH-THROUGH);
        GREEN(l-i13-i9,l-i9-i10,@WEST-EAST-LEFT);
        GREEN(l-i13-i9,l-i9-i10,@WEST-EAST-THROUGH);
        GREEN(l-i13-i9,l-i9-i10,@NORTH-SOUTH-LEFT);
        GREEN(l-i13-i9,l-i9-i10,@NORTH-SOUTH-THROUGH);
        GREEN(l-i10-i9,l-i9-i5,@ALL-RED);
        GREEN(l-i10-i9,l-i9-i5,@ALL-RED2);
        GREEN(l-i10-i9,l-i9-i5,@ALL-RED3);
        GREEN(l-i10-i9,l-i9-i5,@ALL-RED4);
        GREEN(l-i5-i9,l-i9-i8,@ALL-RED);
        GREEN(l-i5-i9,l-i9-i8,@ALL-RED2);
        GREEN(l-i5-i9,l-i9-i8,@ALL-RED3);
        GREEN(l-i5-i9,l-i9-i8,@ALL-RED4);
        GREEN(l-i8-i9,l-i9-i13,@ALL-RED);
        GREEN(l-i8-i9,l-i9-i13,@ALL-RED2);
        GREEN(l-i8-i9,l-i9-i13,@ALL-RED3);
        GREEN(l-i8-i9,l-i9-i13,@ALL-RED4);
        GREEN(l-i13-i9,l-i9-i10,@ALL-RED);
        GREEN(l-i13-i9,l-i9-i10,@ALL-RED2);
        GREEN(l-i13-i9,l-i9-i10,@ALL-RED3);
        GREEN(l-i13-i9,l-i9-i10,@ALL-RED4);
        
        //intersection i10
        //turns
        TURN(l-i11-i10,l-i10-i6);
        TURN(l-i11-i10,l-i10-i9);
        TURN(l-i11-i10,l-i10-i14);
        TURN(l-i6-i10,l-i10-i9);
        TURN(l-i6-i10,l-i10-i14);
        TURN(l-i6-i10,l-i10-i11);
        TURN(l-i9-i10,l-i10-i14);
        TURN(l-i9-i10,l-i10-i11);
        TURN(l-i9-i10,l-i10-i6);
        TURN(l-i14-i10,l-i10-i11);
        TURN(l-i14-i10,l-i10-i6);
        TURN(l-i14-i10,l-i10-i9);
        //link-to
        LINK-TO(l-i11-i10,i10);
        LINK-TO(l-i6-i10,i10);
        LINK-TO(l-i9-i10,i10);
        LINK-TO(l-i14-i10,i10);
        //link-from
        LINK-FROM(i10,l-i10-i11);
        LINK-FROM(i10,l-i10-i6);
        LINK-FROM(i10,l-i10-i9);
        LINK-FROM(i10,l-i10-i14);
        //phase properties
        PHASE-MIN(i10) = 7;
        PHASE-MAX(i10) = 60;
        PHASE-ALL-RED-DUR(i10) = 4;
        //green turns
        GREEN(l-i11-i10,l-i10-i14,@WEST-EAST-LEFT);
        GREEN(l-i9-i10,l-i10-i6,@WEST-EAST-LEFT);
        GREEN(l-i11-i10,l-i10-i9,@WEST-EAST-THROUGH);
        GREEN(l-i9-i10,l-i10-i11,@WEST-EAST-THROUGH);
        GREEN(l-i6-i10,l-i10-i11,@NORTH-SOUTH-LEFT);
        GREEN(l-i14-i10,l-i10-i9,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i10,l-i10-i14,@NORTH-SOUTH-THROUGH);
        GREEN(l-i14-i10,l-i10-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i11-i10,l-i10-i6,@WEST-EAST-LEFT);
        GREEN(l-i11-i10,l-i10-i6,@WEST-EAST-THROUGH);
        GREEN(l-i11-i10,l-i10-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i11-i10,l-i10-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i10,l-i10-i9,@WEST-EAST-LEFT);
        GREEN(l-i6-i10,l-i10-i9,@WEST-EAST-THROUGH);
        GREEN(l-i6-i10,l-i10-i9,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i10,l-i10-i9,@NORTH-SOUTH-THROUGH);
        GREEN(l-i9-i10,l-i10-i14,@WEST-EAST-LEFT);
        GREEN(l-i9-i10,l-i10-i14,@WEST-EAST-THROUGH);
        GREEN(l-i9-i10,l-i10-i14,@NORTH-SOUTH-LEFT);
        GREEN(l-i9-i10,l-i10-i14,@NORTH-SOUTH-THROUGH);
        GREEN(l-i14-i10,l-i10-i11,@WEST-EAST-LEFT);
        GREEN(l-i14-i10,l-i10-i11,@WEST-EAST-THROUGH);
        GREEN(l-i14-i10,l-i10-i11,@NORTH-SOUTH-LEFT);
        GREEN(l-i14-i10,l-i10-i11,@NORTH-SOUTH-THROUGH);
        GREEN(l-i11-i10,l-i10-i6,@ALL-RED);
        GREEN(l-i11-i10,l-i10-i6,@ALL-RED2);
        GREEN(l-i11-i10,l-i10-i6,@ALL-RED3);
        GREEN(l-i11-i10,l-i10-i6,@ALL-RED4);
        GREEN(l-i6-i10,l-i10-i9,@ALL-RED);
        GREEN(l-i6-i10,l-i10-i9,@ALL-RED2);
        GREEN(l-i6-i10,l-i10-i9,@ALL-RED3);
        GREEN(l-i6-i10,l-i10-i9,@ALL-RED4);
        GREEN(l-i9-i10,l-i10-i14,@ALL-RED);
        GREEN(l-i9-i10,l-i10-i14,@ALL-RED2);
        GREEN(l-i9-i10,l-i10-i14,@ALL-RED3);
        GREEN(l-i9-i10,l-i10-i14,@ALL-RED4);
        GREEN(l-i14-i10,l-i10-i11,@ALL-RED);
        GREEN(l-i14-i10,l-i10-i11,@ALL-RED2);
        GREEN(l-i14-i10,l-i10-i11,@ALL-RED3);
        GREEN(l-i14-i10,l-i10-i11,@ALL-RED4);
        
        //intersection i11
        //turns
        TURN(l-s6-i11,l-i11-i7);
        TURN(l-s6-i11,l-i11-i10);
        TURN(l-s6-i11,l-i11-i15);
        TURN(l-i7-i11,l-i11-i10);
        TURN(l-i7-i11,l-i11-i15);
        TURN(l-i7-i11,l-i11-s6);
        TURN(l-i10-i11,l-i11-i15);
        TURN(l-i10-i11,l-i11-s6);
        TURN(l-i10-i11,l-i11-i7);
        TURN(l-i15-i11,l-i11-s6);
        TURN(l-i15-i11,l-i11-i7);
        TURN(l-i15-i11,l-i11-i10);
        //link-to
        LINK-TO(l-s6-i11,i11);
        LINK-TO(l-i7-i11,i11);
        LINK-TO(l-i10-i11,i11);
        LINK-TO(l-i15-i11,i11);
        //link-from
        LINK-FROM(i11,l-i11-s6);
        LINK-FROM(i11,l-i11-i7);
        LINK-FROM(i11,l-i11-i10);
        LINK-FROM(i11,l-i11-i15);
        //phase properties
        PHASE-MIN(i11) = 7;
        PHASE-MAX(i11) = 60;
        PHASE-ALL-RED-DUR(i11) = 4;
        //green turns
        GREEN(l-s6-i11,l-i11-i15,@WEST-EAST-LEFT);
        GREEN(l-i10-i11,l-i11-i7,@WEST-EAST-LEFT);
        GREEN(l-s6-i11,l-i11-i10,@WEST-EAST-THROUGH);
        GREEN(l-i10-i11,l-i11-s6,@WEST-EAST-THROUGH);
        GREEN(l-i7-i11,l-i11-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i15-i11,l-i11-i10,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i11,l-i11-i15,@NORTH-SOUTH-THROUGH);
        GREEN(l-i15-i11,l-i11-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i11,l-i11-i7,@WEST-EAST-LEFT);
        GREEN(l-s6-i11,l-i11-i7,@WEST-EAST-THROUGH);
        GREEN(l-s6-i11,l-i11-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i11,l-i11-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i11,l-i11-i10,@WEST-EAST-LEFT);
        GREEN(l-i7-i11,l-i11-i10,@WEST-EAST-THROUGH);
        GREEN(l-i7-i11,l-i11-i10,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i11,l-i11-i10,@NORTH-SOUTH-THROUGH);
        GREEN(l-i10-i11,l-i11-i15,@WEST-EAST-LEFT);
        GREEN(l-i10-i11,l-i11-i15,@WEST-EAST-THROUGH);
        GREEN(l-i10-i11,l-i11-i15,@NORTH-SOUTH-LEFT);
        GREEN(l-i10-i11,l-i11-i15,@NORTH-SOUTH-THROUGH);
        GREEN(l-i15-i11,l-i11-s6,@WEST-EAST-LEFT);
        GREEN(l-i15-i11,l-i11-s6,@WEST-EAST-THROUGH);
        GREEN(l-i15-i11,l-i11-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i15-i11,l-i11-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i11,l-i11-i7,@ALL-RED);
        GREEN(l-s6-i11,l-i11-i7,@ALL-RED2);
        GREEN(l-s6-i11,l-i11-i7,@ALL-RED3);
        GREEN(l-s6-i11,l-i11-i7,@ALL-RED4);
        GREEN(l-i7-i11,l-i11-i10,@ALL-RED);
        GREEN(l-i7-i11,l-i11-i10,@ALL-RED2);
        GREEN(l-i7-i11,l-i11-i10,@ALL-RED3);
        GREEN(l-i7-i11,l-i11-i10,@ALL-RED4);
        GREEN(l-i10-i11,l-i11-i15,@ALL-RED);
        GREEN(l-i10-i11,l-i11-i15,@ALL-RED2);
        GREEN(l-i10-i11,l-i11-i15,@ALL-RED3);
        GREEN(l-i10-i11,l-i11-i15,@ALL-RED4);
        GREEN(l-i15-i11,l-i11-s6,@ALL-RED);
        GREEN(l-i15-i11,l-i11-s6,@ALL-RED2);
        GREEN(l-i15-i11,l-i11-s6,@ALL-RED3);
        GREEN(l-i15-i11,l-i11-s6,@ALL-RED4);
        
        //intersection i12
        //turns
        TURN(l-i13-i12,l-i12-i8);
        TURN(l-i13-i12,l-i12-s12);
        TURN(l-i13-i12,l-i12-s11);
        TURN(l-i8-i12,l-i12-s12);
        TURN(l-i8-i12,l-i12-s11);
        TURN(l-i8-i12,l-i12-i13);
        TURN(l-s12-i12,l-i12-s11);
        TURN(l-s12-i12,l-i12-i13);
        TURN(l-s12-i12,l-i12-i8);
        TURN(l-s11-i12,l-i12-i13);
        TURN(l-s11-i12,l-i12-i8);
        TURN(l-s11-i12,l-i12-s12);
        //link-to
        LINK-TO(l-i13-i12,i12);
        LINK-TO(l-i8-i12,i12);
        LINK-TO(l-s12-i12,i12);
        LINK-TO(l-s11-i12,i12);
        //link-from
        LINK-FROM(i12,l-i12-i13);
        LINK-FROM(i12,l-i12-i8);
        LINK-FROM(i12,l-i12-s12);
        LINK-FROM(i12,l-i12-s11);
        //phase properties
        PHASE-MIN(i12) = 7;
        PHASE-MAX(i12) = 60;
        PHASE-ALL-RED-DUR(i12) = 4;
        //green turns
        GREEN(l-i13-i12,l-i12-s11,@WEST-EAST-LEFT);
        GREEN(l-s12-i12,l-i12-i8,@WEST-EAST-LEFT);
        GREEN(l-i13-i12,l-i12-s12,@WEST-EAST-THROUGH);
        GREEN(l-s12-i12,l-i12-i13,@WEST-EAST-THROUGH);
        GREEN(l-i8-i12,l-i12-i13,@NORTH-SOUTH-LEFT);
        GREEN(l-s11-i12,l-i12-s12,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i12,l-i12-s11,@NORTH-SOUTH-THROUGH);
        GREEN(l-s11-i12,l-i12-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i13-i12,l-i12-i8,@WEST-EAST-LEFT);
        GREEN(l-i13-i12,l-i12-i8,@WEST-EAST-THROUGH);
        GREEN(l-i13-i12,l-i12-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-i13-i12,l-i12-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i12,l-i12-s12,@WEST-EAST-LEFT);
        GREEN(l-i8-i12,l-i12-s12,@WEST-EAST-THROUGH);
        GREEN(l-i8-i12,l-i12-s12,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i12,l-i12-s12,@NORTH-SOUTH-THROUGH);
        GREEN(l-s12-i12,l-i12-s11,@WEST-EAST-LEFT);
        GREEN(l-s12-i12,l-i12-s11,@WEST-EAST-THROUGH);
        GREEN(l-s12-i12,l-i12-s11,@NORTH-SOUTH-LEFT);
        GREEN(l-s12-i12,l-i12-s11,@NORTH-SOUTH-THROUGH);
        GREEN(l-s11-i12,l-i12-i13,@WEST-EAST-LEFT);
        GREEN(l-s11-i12,l-i12-i13,@WEST-EAST-THROUGH);
        GREEN(l-s11-i12,l-i12-i13,@NORTH-SOUTH-LEFT);
        GREEN(l-s11-i12,l-i12-i13,@NORTH-SOUTH-THROUGH);
        GREEN(l-i13-i12,l-i12-i8,@ALL-RED);
        GREEN(l-i13-i12,l-i12-i8,@ALL-RED2);
        GREEN(l-i13-i12,l-i12-i8,@ALL-RED3);
        GREEN(l-i13-i12,l-i12-i8,@ALL-RED4);
        GREEN(l-i8-i12,l-i12-s12,@ALL-RED);
        GREEN(l-i8-i12,l-i12-s12,@ALL-RED2);
        GREEN(l-i8-i12,l-i12-s12,@ALL-RED3);
        GREEN(l-i8-i12,l-i12-s12,@ALL-RED4);
        GREEN(l-s12-i12,l-i12-s11,@ALL-RED);
        GREEN(l-s12-i12,l-i12-s11,@ALL-RED2);
        GREEN(l-s12-i12,l-i12-s11,@ALL-RED3);
        GREEN(l-s12-i12,l-i12-s11,@ALL-RED4);
        GREEN(l-s11-i12,l-i12-i13,@ALL-RED);
        GREEN(l-s11-i12,l-i12-i13,@ALL-RED2);
        GREEN(l-s11-i12,l-i12-i13,@ALL-RED3);
        GREEN(l-s11-i12,l-i12-i13,@ALL-RED4);
        
        //intersection i13
        //turns
        TURN(l-i14-i13,l-i13-i9);
        TURN(l-i14-i13,l-i13-i12);
        TURN(l-i14-i13,l-i13-s10);
        TURN(l-i9-i13,l-i13-i12);
        TURN(l-i9-i13,l-i13-s10);
        TURN(l-i9-i13,l-i13-i14);
        TURN(l-i12-i13,l-i13-s10);
        TURN(l-i12-i13,l-i13-i14);
        TURN(l-i12-i13,l-i13-i9);
        TURN(l-s10-i13,l-i13-i14);
        TURN(l-s10-i13,l-i13-i9);
        TURN(l-s10-i13,l-i13-i12);
        //link-to
        LINK-TO(l-i14-i13,i13);
        LINK-TO(l-i9-i13,i13);
        LINK-TO(l-i12-i13,i13);
        LINK-TO(l-s10-i13,i13);
        //link-from
        LINK-FROM(i13,l-i13-i14);
        LINK-FROM(i13,l-i13-i9);
        LINK-FROM(i13,l-i13-i12);
        LINK-FROM(i13,l-i13-s10);
        //phase properties
        PHASE-MIN(i13) = 7;
        PHASE-MAX(i13) = 60;
        PHASE-ALL-RED-DUR(i13) = 4;
        //green turns
        GREEN(l-i14-i13,l-i13-s10,@WEST-EAST-LEFT);
        GREEN(l-i12-i13,l-i13-i9,@WEST-EAST-LEFT);
        GREEN(l-i14-i13,l-i13-i12,@WEST-EAST-THROUGH);
        GREEN(l-i12-i13,l-i13-i14,@WEST-EAST-THROUGH);
        GREEN(l-i9-i13,l-i13-i14,@NORTH-SOUTH-LEFT);
        GREEN(l-s10-i13,l-i13-i12,@NORTH-SOUTH-LEFT);
        GREEN(l-i9-i13,l-i13-s10,@NORTH-SOUTH-THROUGH);
        GREEN(l-s10-i13,l-i13-i9,@NORTH-SOUTH-THROUGH);
        GREEN(l-i14-i13,l-i13-i9,@WEST-EAST-LEFT);
        GREEN(l-i14-i13,l-i13-i9,@WEST-EAST-THROUGH);
        GREEN(l-i14-i13,l-i13-i9,@NORTH-SOUTH-LEFT);
        GREEN(l-i14-i13,l-i13-i9,@NORTH-SOUTH-THROUGH);
        GREEN(l-i9-i13,l-i13-i12,@WEST-EAST-LEFT);
        GREEN(l-i9-i13,l-i13-i12,@WEST-EAST-THROUGH);
        GREEN(l-i9-i13,l-i13-i12,@NORTH-SOUTH-LEFT);
        GREEN(l-i9-i13,l-i13-i12,@NORTH-SOUTH-THROUGH);
        GREEN(l-i12-i13,l-i13-s10,@WEST-EAST-LEFT);
        GREEN(l-i12-i13,l-i13-s10,@WEST-EAST-THROUGH);
        GREEN(l-i12-i13,l-i13-s10,@NORTH-SOUTH-LEFT);
        GREEN(l-i12-i13,l-i13-s10,@NORTH-SOUTH-THROUGH);
        GREEN(l-s10-i13,l-i13-i14,@WEST-EAST-LEFT);
        GREEN(l-s10-i13,l-i13-i14,@WEST-EAST-THROUGH);
        GREEN(l-s10-i13,l-i13-i14,@NORTH-SOUTH-LEFT);
        GREEN(l-s10-i13,l-i13-i14,@NORTH-SOUTH-THROUGH);
        GREEN(l-i14-i13,l-i13-i9,@ALL-RED);
        GREEN(l-i14-i13,l-i13-i9,@ALL-RED2);
        GREEN(l-i14-i13,l-i13-i9,@ALL-RED3);
        GREEN(l-i14-i13,l-i13-i9,@ALL-RED4);
        GREEN(l-i9-i13,l-i13-i12,@ALL-RED);
        GREEN(l-i9-i13,l-i13-i12,@ALL-RED2);
        GREEN(l-i9-i13,l-i13-i12,@ALL-RED3);
        GREEN(l-i9-i13,l-i13-i12,@ALL-RED4);
        GREEN(l-i12-i13,l-i13-s10,@ALL-RED);
        GREEN(l-i12-i13,l-i13-s10,@ALL-RED2);
        GREEN(l-i12-i13,l-i13-s10,@ALL-RED3);
        GREEN(l-i12-i13,l-i13-s10,@ALL-RED4);
        GREEN(l-s10-i13,l-i13-i14,@ALL-RED);
        GREEN(l-s10-i13,l-i13-i14,@ALL-RED2);
        GREEN(l-s10-i13,l-i13-i14,@ALL-RED3);
        GREEN(l-s10-i13,l-i13-i14,@ALL-RED4);
        
        //intersection i14
        //turns
        TURN(l-i15-i14,l-i14-i10);
        TURN(l-i15-i14,l-i14-i13);
        TURN(l-i15-i14,l-i14-s9);
        TURN(l-i10-i14,l-i14-i13);
        TURN(l-i10-i14,l-i14-s9);
        TURN(l-i10-i14,l-i14-i15);
        TURN(l-i13-i14,l-i14-s9);
        TURN(l-i13-i14,l-i14-i15);
        TURN(l-i13-i14,l-i14-i10);
        TURN(l-s9-i14,l-i14-i15);
        TURN(l-s9-i14,l-i14-i10);
        TURN(l-s9-i14,l-i14-i13);
        //link-to
        LINK-TO(l-i15-i14,i14);
        LINK-TO(l-i10-i14,i14);
        LINK-TO(l-i13-i14,i14);
        LINK-TO(l-s9-i14,i14);
        //link-from
        LINK-FROM(i14,l-i14-i15);
        LINK-FROM(i14,l-i14-i10);
        LINK-FROM(i14,l-i14-i13);
        LINK-FROM(i14,l-i14-s9);
        //phase properties
        PHASE-MIN(i14) = 7;
        PHASE-MAX(i14) = 60;
        PHASE-ALL-RED-DUR(i14) = 4;
        //green turns
        GREEN(l-i15-i14,l-i14-s9,@WEST-EAST-LEFT);
        GREEN(l-i13-i14,l-i14-i10,@WEST-EAST-LEFT);
        GREEN(l-i15-i14,l-i14-i13,@WEST-EAST-THROUGH);
        GREEN(l-i13-i14,l-i14-i15,@WEST-EAST-THROUGH);
        GREEN(l-i10-i14,l-i14-i15,@NORTH-SOUTH-LEFT);
        GREEN(l-s9-i14,l-i14-i13,@NORTH-SOUTH-LEFT);
        GREEN(l-i10-i14,l-i14-s9,@NORTH-SOUTH-THROUGH);
        GREEN(l-s9-i14,l-i14-i10,@NORTH-SOUTH-THROUGH);
        GREEN(l-i15-i14,l-i14-i10,@WEST-EAST-LEFT);
        GREEN(l-i15-i14,l-i14-i10,@WEST-EAST-THROUGH);
        GREEN(l-i15-i14,l-i14-i10,@NORTH-SOUTH-LEFT);
        GREEN(l-i15-i14,l-i14-i10,@NORTH-SOUTH-THROUGH);
        GREEN(l-i10-i14,l-i14-i13,@WEST-EAST-LEFT);
        GREEN(l-i10-i14,l-i14-i13,@WEST-EAST-THROUGH);
        GREEN(l-i10-i14,l-i14-i13,@NORTH-SOUTH-LEFT);
        GREEN(l-i10-i14,l-i14-i13,@NORTH-SOUTH-THROUGH);
        GREEN(l-i13-i14,l-i14-s9,@WEST-EAST-LEFT);
        GREEN(l-i13-i14,l-i14-s9,@WEST-EAST-THROUGH);
        GREEN(l-i13-i14,l-i14-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-i13-i14,l-i14-s9,@NORTH-SOUTH-THROUGH);
        GREEN(l-s9-i14,l-i14-i15,@WEST-EAST-LEFT);
        GREEN(l-s9-i14,l-i14-i15,@WEST-EAST-THROUGH);
        GREEN(l-s9-i14,l-i14-i15,@NORTH-SOUTH-LEFT);
        GREEN(l-s9-i14,l-i14-i15,@NORTH-SOUTH-THROUGH);
        GREEN(l-i15-i14,l-i14-i10,@ALL-RED);
        GREEN(l-i15-i14,l-i14-i10,@ALL-RED2);
        GREEN(l-i15-i14,l-i14-i10,@ALL-RED3);
        GREEN(l-i15-i14,l-i14-i10,@ALL-RED4);
        GREEN(l-i10-i14,l-i14-i13,@ALL-RED);
        GREEN(l-i10-i14,l-i14-i13,@ALL-RED2);
        GREEN(l-i10-i14,l-i14-i13,@ALL-RED3);
        GREEN(l-i10-i14,l-i14-i13,@ALL-RED4);
        GREEN(l-i13-i14,l-i14-s9,@ALL-RED);
        GREEN(l-i13-i14,l-i14-s9,@ALL-RED2);
        GREEN(l-i13-i14,l-i14-s9,@ALL-RED3);
        GREEN(l-i13-i14,l-i14-s9,@ALL-RED4);
        GREEN(l-s9-i14,l-i14-i15,@ALL-RED);
        GREEN(l-s9-i14,l-i14-i15,@ALL-RED2);
        GREEN(l-s9-i14,l-i14-i15,@ALL-RED3);
        GREEN(l-s9-i14,l-i14-i15,@ALL-RED4);
        
        //intersection i15
        //turns
        TURN(l-s7-i15,l-i15-i11);
        TURN(l-s7-i15,l-i15-i14);
        TURN(l-s7-i15,l-i15-s8);
        TURN(l-i11-i15,l-i15-i14);
        TURN(l-i11-i15,l-i15-s8);
        TURN(l-i11-i15,l-i15-s7);
        TURN(l-i14-i15,l-i15-s8);
        TURN(l-i14-i15,l-i15-s7);
        TURN(l-i14-i15,l-i15-i11);
        TURN(l-s8-i15,l-i15-s7);
        TURN(l-s8-i15,l-i15-i11);
        TURN(l-s8-i15,l-i15-i14);
        //link-to
        LINK-TO(l-s7-i15,i15);
        LINK-TO(l-i11-i15,i15);
        LINK-TO(l-i14-i15,i15);
        LINK-TO(l-s8-i15,i15);
        //link-from
        LINK-FROM(i15,l-i15-s7);
        LINK-FROM(i15,l-i15-i11);
        LINK-FROM(i15,l-i15-i14);
        LINK-FROM(i15,l-i15-s8);
        //phase properties
        PHASE-MIN(i15) = 7;
        PHASE-MAX(i15) = 60;
        PHASE-ALL-RED-DUR(i15) = 4;
        //green turns
        GREEN(l-s7-i15,l-i15-s8,@WEST-EAST-LEFT);
        GREEN(l-i14-i15,l-i15-i11,@WEST-EAST-LEFT);
        GREEN(l-s7-i15,l-i15-i14,@WEST-EAST-THROUGH);
        GREEN(l-i14-i15,l-i15-s7,@WEST-EAST-THROUGH);
        GREEN(l-i11-i15,l-i15-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i15,l-i15-i14,@NORTH-SOUTH-LEFT);
        GREEN(l-i11-i15,l-i15-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i15,l-i15-i11,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i15,l-i15-i11,@WEST-EAST-LEFT);
        GREEN(l-s7-i15,l-i15-i11,@WEST-EAST-THROUGH);
        GREEN(l-s7-i15,l-i15-i11,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i15,l-i15-i11,@NORTH-SOUTH-THROUGH);
        GREEN(l-i11-i15,l-i15-i14,@WEST-EAST-LEFT);
        GREEN(l-i11-i15,l-i15-i14,@WEST-EAST-THROUGH);
        GREEN(l-i11-i15,l-i15-i14,@NORTH-SOUTH-LEFT);
        GREEN(l-i11-i15,l-i15-i14,@NORTH-SOUTH-THROUGH);
        GREEN(l-i14-i15,l-i15-s8,@WEST-EAST-LEFT);
        GREEN(l-i14-i15,l-i15-s8,@WEST-EAST-THROUGH);
        GREEN(l-i14-i15,l-i15-s8,@NORTH-SOUTH-LEFT);
        GREEN(l-i14-i15,l-i15-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i15,l-i15-s7,@WEST-EAST-LEFT);
        GREEN(l-s8-i15,l-i15-s7,@WEST-EAST-THROUGH);
        GREEN(l-s8-i15,l-i15-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i15,l-i15-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i15,l-i15-i11,@ALL-RED);
        GREEN(l-s7-i15,l-i15-i11,@ALL-RED2);
        GREEN(l-s7-i15,l-i15-i11,@ALL-RED3);
        GREEN(l-s7-i15,l-i15-i11,@ALL-RED4);
        GREEN(l-i11-i15,l-i15-i14,@ALL-RED);
        GREEN(l-i11-i15,l-i15-i14,@ALL-RED2);
        GREEN(l-i11-i15,l-i15-i14,@ALL-RED3);
        GREEN(l-i11-i15,l-i15-i14,@ALL-RED4);
        GREEN(l-i14-i15,l-i15-s8,@ALL-RED);
        GREEN(l-i14-i15,l-i15-s8,@ALL-RED2);
        GREEN(l-i14-i15,l-i15-s8,@ALL-RED3);
        GREEN(l-i14-i15,l-i15-s8,@ALL-RED4);
        GREEN(l-s8-i15,l-i15-s7,@ALL-RED);
        GREEN(l-s8-i15,l-i15-s7,@ALL-RED2);
        GREEN(l-s8-i15,l-i15-s7,@ALL-RED3);
        GREEN(l-s8-i15,l-i15-s7,@ALL-RED4);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t25);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        TIME-VAL(t25) = 25;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
        NEXT(t8,t9);
        NEXT(t9,t10);
        NEXT(t10,t11);
        NEXT(t11,t12);
        NEXT(t12,t13);
        NEXT(t13,t14);
        NEXT(t14,t15);
        NEXT(t15,t16);
        NEXT(t16,t17);
        NEXT(t17,t18);
        NEXT(t18,t19);
        NEXT(t19,t20);
        NEXT(t20,t21);
        NEXT(t21,t22);
        NEXT(t22,t23);
        NEXT(t23,t24);
        NEXT(t24,t25);
        //cartesian coordinates (for visualization)
        X(i0) = 331.0; Y(i0) = 895.0;
        X(i1) = 535.0; Y(i1) = 895.0;
        X(i2) = 784.0; Y(i2) = 895.0;
        X(i3) = 991.0; Y(i3) = 895.0;
        X(i4) = 331.0; Y(i4) = 740.0;
        X(i5) = 535.0; Y(i5) = 740.0;
        X(i6) = 784.0; Y(i6) = 740.0;
        X(i7) = 991.0; Y(i7) = 740.0;
        X(i8) = 331.0; Y(i8) = 515.0;
        X(i9) = 535.0; Y(i9) = 515.0;
        X(i10) = 784.0; Y(i10) = 515.0;
        X(i11) = 991.0; Y(i11) = 515.0;
        X(i12) = 331.0; Y(i12) = 273.0;
        X(i13) = 535.0; Y(i13) = 273.0;
        X(i14) = 784.0; Y(i14) = 273.0;
        X(i15) = 991.0; Y(i15) = 273.0;
        SOURCE-X(l-s15-i0) = 0.0; SOURCE-Y(l-s15-i0) = 895.0;
        SOURCE-X(l-s4-i3) = 1286.0; SOURCE-Y(l-s4-i3) = 895.0;
        SINK-X(l-i0-s15) = 0.0; SINK-Y(l-i0-s15) = 895.0;
        SINK-X(l-i3-s4) = 1286.0; SINK-Y(l-i3-s4) = 895.0;
        SOURCE-X(l-s14-i4) = 0.0; SOURCE-Y(l-s14-i4) = 740.0;
        SOURCE-X(l-s5-i7) = 1286.0; SOURCE-Y(l-s5-i7) = 740.0;
        SINK-X(l-i4-s14) = 0.0; SINK-Y(l-i4-s14) = 740.0;
        SINK-X(l-i7-s5) = 1286.0; SINK-Y(l-i7-s5) = 740.0;
        SOURCE-X(l-s13-i8) = 0.0; SOURCE-Y(l-s13-i8) = 515.0;
        SOURCE-X(l-s6-i11) = 1286.0; SOURCE-Y(l-s6-i11) = 515.0;
        SINK-X(l-i8-s13) = 0.0; SINK-Y(l-i8-s13) = 515.0;
        SINK-X(l-i11-s6) = 1286.0; SINK-Y(l-i11-s6) = 515.0;
        SOURCE-X(l-s12-i12) = 0.0; SOURCE-Y(l-s12-i12) = 273.0;
        SOURCE-X(l-s7-i15) = 1286.0; SOURCE-Y(l-s7-i15) = 273.0;
        SINK-X(l-i12-s12) = 0.0; SINK-Y(l-i12-s12) = 273.0;
        SINK-X(l-i15-s7) = 1286.0; SINK-Y(l-i15-s7) = 273.0;
        SOURCE-X(l-s0-i0) = 331.0; SOURCE-Y(l-s0-i0) = 1173.0;
        SOURCE-X(l-s11-i12) = 331.0; SOURCE-Y(l-s11-i12) = 0.0;
        SINK-X(l-i0-s0) = 331.0; SINK-Y(l-i0-s0) = 1173.0;
        SINK-X(l-i12-s11) = 331.0; SINK-Y(l-i12-s11) = 0.0;
        SOURCE-X(l-s1-i1) = 535.0; SOURCE-Y(l-s1-i1) = 1173.0;
        SOURCE-X(l-s10-i13) = 535.0; SOURCE-Y(l-s10-i13) = 0.0;
        SINK-X(l-i1-s1) = 535.0; SINK-Y(l-i1-s1) = 1173.0;
        SINK-X(l-i13-s10) = 535.0; SINK-Y(l-i13-s10) = 0.0;
        SOURCE-X(l-s2-i2) = 784.0; SOURCE-Y(l-s2-i2) = 1173.0;
        SOURCE-X(l-s9-i14) = 784.0; SOURCE-Y(l-s9-i14) = 0.0;
        SINK-X(l-i2-s2) = 784.0; SINK-Y(l-i2-s2) = 1173.0;
        SINK-X(l-i14-s9) = 784.0; SINK-Y(l-i14-s9) = 0.0;
        SOURCE-X(l-s3-i3) = 991.0; SOURCE-Y(l-s3-i3) = 1173.0;
        SOURCE-X(l-s8-i15) = 991.0; SOURCE-Y(l-s8-i15) = 0.0;
        SINK-X(l-i3-s3) = 991.0; SINK-Y(l-i3-s3) = 1173.0;
        SINK-X(l-i15-s8) = 991.0; SINK-Y(l-i15-s8) = 0.0;
    };
}

instance network_4x4 {
    domain = BLX_model;
    non-fluents = network_4x4;
    max-nondef-actions = 16;
    horizon = 256;
    discount = 1.0;
}
// Source link ids
//l-s0-i0=64
//l-s11-i12=65
//l-s1-i1=66
//l-s10-i13=67
//l-s2-i2=68
//l-s9-i14=69
//l-s3-i3=70
//l-s8-i15=71
//l-s15-i0=72
//l-s4-i3=73
//l-s14-i4=74
//l-s5-i7=75
//l-s13-i8=76
//l-s6-i11=77
//l-s12-i12=78
//l-s7-i15=79
