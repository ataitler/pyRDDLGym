non-fluents network_3x3 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3, i4, i5, i6, i7, i8};
        link         : {l-i0-s0, l-i0-i1, l-i0-i3, l-i0-s11, l-i1-s1, l-i1-i2, l-i1-i4, l-i1-i0, l-i2-s2, l-i2-s3, l-i2-i5, l-i2-i1, l-i3-i0, l-i3-i4, l-i3-i6, l-i3-s10, l-i4-i1, l-i4-i5, l-i4-i7, l-i4-i3, l-i5-i2, l-i5-s4, l-i5-i8, l-i5-i4, l-i6-i3, l-i6-i7, l-i6-s8, l-i6-s9, l-i7-i4, l-i7-i8, l-i7-s7, l-i7-i6, l-i8-i5, l-i8-s5, l-i8-s6, l-i8-i7, l-s0-i0, l-s8-i6, l-s1-i1, l-s7-i7, l-s2-i2, l-s6-i8, l-s11-i0, l-s3-i2, l-s10-i3, l-s4-i5, l-s9-i6, l-s5-i8};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28};
    };

    non-fluents {
        //sources
        SOURCE(l-s11-i0);
        SOURCE(l-s3-i2);
        SOURCE(l-s10-i3);
        SOURCE(l-s4-i5);
        SOURCE(l-s9-i6);
        SOURCE(l-s5-i8);
        SOURCE(l-s0-i0);
        SOURCE(l-s8-i6);
        SOURCE(l-s1-i1);
        SOURCE(l-s7-i7);
        SOURCE(l-s2-i2);
        SOURCE(l-s6-i8);
        //sinks
        SINK(l-i0-s11);
        SINK(l-i2-s3);
        SINK(l-i3-s10);
        SINK(l-i5-s4);
        SINK(l-i6-s9);
        SINK(l-i8-s5);
        SINK(l-i0-s0);
        SINK(l-i6-s8);
        SINK(l-i1-s1);
        SINK(l-i7-s7);
        SINK(l-i2-s2);
        SINK(l-i8-s6);
        //satflow rates
        MU(l-s11-i0,l-i0-s0) = 1.06;
        MU(l-s11-i0,l-i0-i1) = 0.636;
        MU(l-s11-i0,l-i0-i3) = 0.42400000000000004;
        MU(l-i1-i0,l-i0-s11) = 1.06;
        MU(l-s0-i0,l-i0-i1) = 0.636;
        MU(l-i3-i0,l-i0-i1) = 0.42400000000000004;
        MU(l-s0-i0,l-i0-i3) = 1.06;
        MU(l-i1-i0,l-i0-i3) = 0.636;
        MU(l-i1-i0,l-i0-s0) = 0.42400000000000004;
        MU(l-i3-i0,l-i0-s11) = 1.06;
        MU(l-i3-i0,l-i0-s0) = 0.636;
        MU(l-s0-i0,l-i0-s11) = 0.42400000000000004;
        MU(l-i0-i1,l-i1-i2) = 1.06;
        MU(l-i0-i1,l-i1-s1) = 0.636;
        MU(l-i0-i1,l-i1-i4) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-i2) = 1.06;
        MU(l-i2-i1,l-i1-i0) = 0.636;
        MU(l-i4-i1,l-i1-i2) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-i4) = 1.06;
        MU(l-i2-i1,l-i1-i4) = 0.636;
        MU(l-i2-i1,l-i1-s1) = 0.42400000000000004;
        MU(l-i4-i1,l-i1-i0) = 1.06;
        MU(l-i4-i1,l-i1-s1) = 0.636;
        MU(l-s1-i1,l-i1-i0) = 0.42400000000000004;
        MU(l-i1-i2,l-i2-s3) = 1.06;
        MU(l-i1-i2,l-i2-s2) = 0.636;
        MU(l-i1-i2,l-i2-i5) = 0.42400000000000004;
        MU(l-s3-i2,l-i2-i1) = 1.06;
        MU(l-s2-i2,l-i2-s3) = 0.636;
        MU(l-i5-i2,l-i2-s3) = 0.42400000000000004;
        MU(l-s2-i2,l-i2-i5) = 1.06;
        MU(l-s3-i2,l-i2-i5) = 0.636;
        MU(l-s3-i2,l-i2-s2) = 0.42400000000000004;
        MU(l-i5-i2,l-i2-i1) = 1.06;
        MU(l-i5-i2,l-i2-s2) = 0.636;
        MU(l-s2-i2,l-i2-i1) = 0.42400000000000004;
        MU(l-s10-i3,l-i3-i4) = 1.06;
        MU(l-s10-i3,l-i3-i0) = 0.636;
        MU(l-s10-i3,l-i3-i6) = 0.42400000000000004;
        MU(l-i0-i3,l-i3-i4) = 1.06;
        MU(l-i4-i3,l-i3-s10) = 0.636;
        MU(l-i6-i3,l-i3-i4) = 0.42400000000000004;
        MU(l-i0-i3,l-i3-i6) = 1.06;
        MU(l-i4-i3,l-i3-i6) = 0.636;
        MU(l-i4-i3,l-i3-i0) = 0.42400000000000004;
        MU(l-i6-i3,l-i3-s10) = 1.06;
        MU(l-i6-i3,l-i3-i0) = 0.636;
        MU(l-i0-i3,l-i3-s10) = 0.42400000000000004;
        MU(l-i3-i4,l-i4-i5) = 1.06;
        MU(l-i3-i4,l-i4-i1) = 0.636;
        MU(l-i3-i4,l-i4-i7) = 0.42400000000000004;
        MU(l-i5-i4,l-i4-i3) = 1.06;
        MU(l-i1-i4,l-i4-i5) = 0.636;
        MU(l-i7-i4,l-i4-i5) = 0.42400000000000004;
        MU(l-i5-i4,l-i4-i7) = 1.06;
        MU(l-i1-i4,l-i4-i7) = 0.636;
        MU(l-i5-i4,l-i4-i1) = 0.42400000000000004;
        MU(l-i7-i4,l-i4-i1) = 1.06;
        MU(l-i7-i4,l-i4-i3) = 0.636;
        MU(l-i1-i4,l-i4-i3) = 0.42400000000000004;
        MU(l-i4-i5,l-i5-i2) = 1.06;
        MU(l-i4-i5,l-i5-s4) = 0.636;
        MU(l-i4-i5,l-i5-i8) = 0.42400000000000004;
        MU(l-i2-i5,l-i5-s4) = 1.06;
        MU(l-s4-i5,l-i5-i4) = 0.636;
        MU(l-i8-i5,l-i5-s4) = 0.42400000000000004;
        MU(l-i2-i5,l-i5-i8) = 1.06;
        MU(l-s4-i5,l-i5-i8) = 0.636;
        MU(l-s4-i5,l-i5-i2) = 0.42400000000000004;
        MU(l-i8-i5,l-i5-i2) = 1.06;
        MU(l-i8-i5,l-i5-i4) = 0.636;
        MU(l-i2-i5,l-i5-i4) = 0.42400000000000004;
        MU(l-s9-i6,l-i6-i7) = 1.06;
        MU(l-s9-i6,l-i6-i3) = 0.636;
        MU(l-s9-i6,l-i6-s8) = 0.42400000000000004;
        MU(l-i7-i6,l-i6-s9) = 1.06;
        MU(l-i3-i6,l-i6-i7) = 0.636;
        MU(l-s8-i6,l-i6-i7) = 0.42400000000000004;
        MU(l-i3-i6,l-i6-s8) = 1.06;
        MU(l-i7-i6,l-i6-s8) = 0.636;
        MU(l-i7-i6,l-i6-i3) = 0.42400000000000004;
        MU(l-s8-i6,l-i6-i3) = 1.06;
        MU(l-s8-i6,l-i6-s9) = 0.636;
        MU(l-i3-i6,l-i6-s9) = 0.42400000000000004;
        MU(l-i6-i7,l-i7-i4) = 1.06;
        MU(l-i6-i7,l-i7-i8) = 0.636;
        MU(l-i6-i7,l-i7-s7) = 0.42400000000000004;
        MU(l-i8-i7,l-i7-i6) = 1.06;
        MU(l-i4-i7,l-i7-i8) = 0.636;
        MU(l-s7-i7,l-i7-i8) = 0.42400000000000004;
        MU(l-i4-i7,l-i7-s7) = 1.06;
        MU(l-i8-i7,l-i7-s7) = 0.636;
        MU(l-i8-i7,l-i7-i4) = 0.42400000000000004;
        MU(l-s7-i7,l-i7-i4) = 1.06;
        MU(l-s7-i7,l-i7-i6) = 0.636;
        MU(l-i4-i7,l-i7-i6) = 0.42400000000000004;
        MU(l-i7-i8,l-i8-s5) = 1.06;
        MU(l-i7-i8,l-i8-i5) = 0.636;
        MU(l-i7-i8,l-i8-s6) = 0.42400000000000004;
        MU(l-i5-i8,l-i8-s5) = 1.06;
        MU(l-s5-i8,l-i8-i7) = 0.636;
        MU(l-s6-i8,l-i8-s5) = 0.42400000000000004;
        MU(l-i5-i8,l-i8-s6) = 1.06;
        MU(l-s5-i8,l-i8-s6) = 0.636;
        MU(l-s5-i8,l-i8-i5) = 0.42400000000000004;
        MU(l-s6-i8,l-i8-i5) = 1.06;
        MU(l-s6-i8,l-i8-i7) = 0.636;
        MU(l-i5-i8,l-i8-i7) = 0.42400000000000004;
        //turn probabilities
        BETA(l-s11-i0,l-i0-s0) = 0.6902132560472442;
        BETA(l-s11-i0,l-i0-i1) = 0.20978674395275576;
        BETA(l-s11-i0,l-i0-i3) = 0.10000000000000009;
        BETA(l-i1-i0,l-i0-s11) = 0.7091033734596008;
        BETA(l-s0-i0,l-i0-i1) = 0.19089662654039918;
        BETA(l-i3-i0,l-i0-i1) = 0.09999999999999998;
        BETA(l-s0-i0,l-i0-i3) = 0.7554135758623777;
        BETA(l-i1-i0,l-i0-i3) = 0.14458642413762232;
        BETA(l-i1-i0,l-i0-s0) = 0.1;
        BETA(l-i3-i0,l-i0-s11) = 0.7289667290662586;
        BETA(l-i3-i0,l-i0-s0) = 0.17103327093374143;
        BETA(l-s0-i0,l-i0-s11) = 0.09999999999999998;
        BETA(l-i0-i1,l-i1-i2) = 0.6501245994030458;
        BETA(l-i0-i1,l-i1-s1) = 0.24987540059695423;
        BETA(l-i0-i1,l-i1-i4) = 0.09999999999999998;
        BETA(l-s1-i1,l-i1-i2) = 0.7962768448522891;
        BETA(l-i2-i1,l-i1-i0) = 0.10372315514771085;
        BETA(l-i4-i1,l-i1-i2) = 0.10000000000000003;
        BETA(l-s1-i1,l-i1-i4) = 0.7119546910118472;
        BETA(l-i2-i1,l-i1-i4) = 0.18804530898815283;
        BETA(l-i2-i1,l-i1-s1) = 0.1;
        BETA(l-i4-i1,l-i1-i0) = 0.6294960281081401;
        BETA(l-i4-i1,l-i1-s1) = 0.27050397189185993;
        BETA(l-s1-i1,l-i1-i0) = 0.09999999999999998;
        BETA(l-i1-i2,l-i2-s3) = 0.7105875290589279;
        BETA(l-i1-i2,l-i2-s2) = 0.18941247094107214;
        BETA(l-i1-i2,l-i2-i5) = 0.1;
        BETA(l-s3-i2,l-i2-i1) = 0.7891411767539459;
        BETA(l-s2-i2,l-i2-s3) = 0.11085882324605403;
        BETA(l-i5-i2,l-i2-s3) = 0.10000000000000006;
        BETA(l-s2-i2,l-i2-i5) = 0.688436429710196;
        BETA(l-s3-i2,l-i2-i5) = 0.2115635702898039;
        BETA(l-s3-i2,l-i2-s2) = 0.10000000000000006;
        BETA(l-i5-i2,l-i2-i1) = 0.7272543005649874;
        BETA(l-i5-i2,l-i2-s2) = 0.1727456994350126;
        BETA(l-s2-i2,l-i2-i1) = 0.09999999999999998;
        BETA(l-s10-i3,l-i3-i4) = 0.777879349601792;
        BETA(l-s10-i3,l-i3-i0) = 0.12212065039820806;
        BETA(l-s10-i3,l-i3-i6) = 0.09999999999999999;
        BETA(l-i0-i3,l-i3-i4) = 0.7009155491382764;
        BETA(l-i4-i3,l-i3-s10) = 0.19908445086172358;
        BETA(l-i6-i3,l-i3-i4) = 0.10000000000000006;
        BETA(l-i0-i3,l-i3-i6) = 0.66827365043796;
        BETA(l-i4-i3,l-i3-i6) = 0.2317263495620399;
        BETA(l-i4-i3,l-i3-i0) = 0.10000000000000003;
        BETA(l-i6-i3,l-i3-s10) = 0.6100673574273554;
        BETA(l-i6-i3,l-i3-i0) = 0.2899326425726446;
        BETA(l-i0-i3,l-i3-s10) = 0.09999999999999998;
        BETA(l-i3-i4,l-i4-i5) = 0.7258761978520792;
        BETA(l-i3-i4,l-i4-i1) = 0.17412380214792078;
        BETA(l-i3-i4,l-i4-i7) = 0.09999999999999998;
        BETA(l-i5-i4,l-i4-i3) = 0.638456229684621;
        BETA(l-i1-i4,l-i4-i5) = 0.261543770315379;
        BETA(l-i7-i4,l-i4-i5) = 0.09999999999999998;
        BETA(l-i5-i4,l-i4-i7) = 0.7047261393237783;
        BETA(l-i1-i4,l-i4-i7) = 0.19527386067622174;
        BETA(l-i5-i4,l-i4-i1) = 0.1;
        BETA(l-i7-i4,l-i4-i1) = 0.7336056086254324;
        BETA(l-i7-i4,l-i4-i3) = 0.1663943913745675;
        BETA(l-i1-i4,l-i4-i3) = 0.10000000000000006;
        BETA(l-i4-i5,l-i5-i2) = 0.6430106876626821;
        BETA(l-i4-i5,l-i5-s4) = 0.25698931233731787;
        BETA(l-i4-i5,l-i5-i8) = 0.10000000000000003;
        BETA(l-i2-i5,l-i5-s4) = 0.6177450068898225;
        BETA(l-s4-i5,l-i5-i4) = 0.28225499311017743;
        BETA(l-i8-i5,l-i5-s4) = 0.10000000000000009;
        BETA(l-i2-i5,l-i5-i8) = 0.6149108612945476;
        BETA(l-s4-i5,l-i5-i8) = 0.28508913870545227;
        BETA(l-s4-i5,l-i5-i2) = 0.10000000000000009;
        BETA(l-i8-i5,l-i5-i2) = 0.6850272801295844;
        BETA(l-i8-i5,l-i5-i4) = 0.21497271987041558;
        BETA(l-i2-i5,l-i5-i4) = 0.10000000000000006;
        BETA(l-s9-i6,l-i6-i7) = 0.7441597588535769;
        BETA(l-s9-i6,l-i6-i3) = 0.1558402411464231;
        BETA(l-s9-i6,l-i6-s8) = 0.10000000000000003;
        BETA(l-i7-i6,l-i6-s9) = 0.7486233821754472;
        BETA(l-i3-i6,l-i6-i7) = 0.1513766178245528;
        BETA(l-s8-i6,l-i6-i7) = 0.09999999999999998;
        BETA(l-i3-i6,l-i6-s8) = 0.614422052967804;
        BETA(l-i7-i6,l-i6-s8) = 0.2855779470321959;
        BETA(l-i7-i6,l-i6-i3) = 0.10000000000000003;
        BETA(l-s8-i6,l-i6-i3) = 0.6552401846995196;
        BETA(l-s8-i6,l-i6-s9) = 0.24475981530048035;
        BETA(l-i3-i6,l-i6-s9) = 0.10000000000000003;
        BETA(l-i6-i7,l-i7-i4) = 0.7425611597265523;
        BETA(l-i6-i7,l-i7-i8) = 0.15743884027344768;
        BETA(l-i6-i7,l-i7-s7) = 0.09999999999999998;
        BETA(l-i8-i7,l-i7-i6) = 0.6489714758656867;
        BETA(l-i4-i7,l-i7-i8) = 0.2510285241343132;
        BETA(l-s7-i7,l-i7-i8) = 0.10000000000000009;
        BETA(l-i4-i7,l-i7-s7) = 0.7396871295943014;
        BETA(l-i8-i7,l-i7-s7) = 0.16031287040569864;
        BETA(l-i8-i7,l-i7-i4) = 0.09999999999999998;
        BETA(l-s7-i7,l-i7-i4) = 0.7055298961952664;
        BETA(l-s7-i7,l-i7-i6) = 0.1944701038047335;
        BETA(l-i4-i7,l-i7-i6) = 0.10000000000000009;
        BETA(l-i7-i8,l-i8-s5) = 0.6494244044343618;
        BETA(l-i7-i8,l-i8-i5) = 0.25057559556563824;
        BETA(l-i7-i8,l-i8-s6) = 0.09999999999999998;
        BETA(l-i5-i8,l-i8-s5) = 0.6063481321853044;
        BETA(l-s5-i8,l-i8-i7) = 0.29365186781469554;
        BETA(l-s6-i8,l-i8-s5) = 0.10000000000000009;
        BETA(l-i5-i8,l-i8-s6) = 0.6658614088637607;
        BETA(l-s5-i8,l-i8-s6) = 0.23413859113623936;
        BETA(l-s5-i8,l-i8-i5) = 0.09999999999999998;
        BETA(l-s6-i8,l-i8-i5) = 0.7079623216925979;
        BETA(l-s6-i8,l-i8-i7) = 0.19203767830740212;
        BETA(l-i5-i8,l-i8-i7) = 0.1;
        //link lengths
        Dl(l-i0-s0) = 365.0;
        Dl(l-i0-i1) = 248.0;
        Dl(l-i0-i3) = 240.0;
        Dl(l-i0-s11) = 342.0;
        Dl(l-i1-s1) = 365.0;
        Dl(l-i1-i2) = 165.0;
        Dl(l-i1-i4) = 240.0;
        Dl(l-i1-i0) = 248.0;
        Dl(l-i2-s2) = 365.0;
        Dl(l-i2-s3) = 365.0;
        Dl(l-i2-i5) = 240.0;
        Dl(l-i2-i1) = 165.0;
        Dl(l-i3-i0) = 240.0;
        Dl(l-i3-i4) = 248.0;
        Dl(l-i3-i6) = 189.0;
        Dl(l-i3-s10) = 342.0;
        Dl(l-i4-i1) = 240.0;
        Dl(l-i4-i5) = 165.0;
        Dl(l-i4-i7) = 189.0;
        Dl(l-i4-i3) = 248.0;
        Dl(l-i5-i2) = 240.0;
        Dl(l-i5-s4) = 365.0;
        Dl(l-i5-i8) = 189.0;
        Dl(l-i5-i4) = 165.0;
        Dl(l-i6-i3) = 189.0;
        Dl(l-i6-i7) = 248.0;
        Dl(l-i6-s8) = 274.0;
        Dl(l-i6-s9) = 342.0;
        Dl(l-i7-i4) = 189.0;
        Dl(l-i7-i8) = 165.0;
        Dl(l-i7-s7) = 274.0;
        Dl(l-i7-i6) = 248.0;
        Dl(l-i8-i5) = 189.0;
        Dl(l-i8-s5) = 365.0;
        Dl(l-i8-s6) = 274.0;
        Dl(l-i8-i7) = 165.0;
        Dl(l-s0-i0) = 365.0;
        Dl(l-s8-i6) = 274.0;
        Dl(l-s1-i1) = 365.0;
        Dl(l-s7-i7) = 274.0;
        Dl(l-s2-i2) = 365.0;
        Dl(l-s6-i8) = 274.0;
        Dl(l-s11-i0) = 342.0;
        Dl(l-s3-i2) = 365.0;
        Dl(l-s10-i3) = 342.0;
        Dl(l-s4-i5) = 365.0;
        Dl(l-s9-i6) = 342.0;
        Dl(l-s5-i8) = 365.0;
        //source arrival rates
        SOURCE-ARRIVAL-RATE(l-s0-i0) = 0.26;
        SOURCE-ARRIVAL-RATE(l-s8-i6) = 0.24;
        SOURCE-ARRIVAL-RATE(l-s1-i1) = 0.3;
        SOURCE-ARRIVAL-RATE(l-s7-i7) = 0.24;
        SOURCE-ARRIVAL-RATE(l-s2-i2) = 0.27;
        SOURCE-ARRIVAL-RATE(l-s6-i8) = 0.25;
        SOURCE-ARRIVAL-RATE(l-s11-i0) = 0.33;
        SOURCE-ARRIVAL-RATE(l-s3-i2) = 0.36;
        SOURCE-ARRIVAL-RATE(l-s10-i3) = 0.25;
        SOURCE-ARRIVAL-RATE(l-s4-i5) = 0.39;
        SOURCE-ARRIVAL-RATE(l-s9-i6) = 0.33;
        SOURCE-ARRIVAL-RATE(l-s5-i8) = 0.32;
        
        //intersection i0
        //turns
        TURN(l-i1-i0,l-i0-s0);
        TURN(l-i1-i0,l-i0-s11);
        TURN(l-i1-i0,l-i0-i3);
        TURN(l-s0-i0,l-i0-s11);
        TURN(l-s0-i0,l-i0-i3);
        TURN(l-s0-i0,l-i0-i1);
        TURN(l-s11-i0,l-i0-i3);
        TURN(l-s11-i0,l-i0-i1);
        TURN(l-s11-i0,l-i0-s0);
        TURN(l-i3-i0,l-i0-i1);
        TURN(l-i3-i0,l-i0-s0);
        TURN(l-i3-i0,l-i0-s11);
        //link-to
        LINK-TO(l-i1-i0,i0);
        LINK-TO(l-s0-i0,i0);
        LINK-TO(l-s11-i0,i0);
        LINK-TO(l-i3-i0,i0);
        //link-from
        LINK-FROM(i0,l-i0-i1);
        LINK-FROM(i0,l-i0-s0);
        LINK-FROM(i0,l-i0-s11);
        LINK-FROM(i0,l-i0-i3);
        //phase properties
        PHASE-MIN(i0) = 7;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l-i1-i0,l-i0-i3,@WEST-EAST-LEFT);
        GREEN(l-s11-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s11,@WEST-EAST-THROUGH);
        GREEN(l-s11-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i0,l-i0-s11,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-s0-i0,l-i0-s11,@WEST-EAST-LEFT);
        GREEN(l-s0-i0,l-i0-s11,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s11,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s11,@NORTH-SOUTH-THROUGH);
        GREEN(l-s11-i0,l-i0-i3,@WEST-EAST-LEFT);
        GREEN(l-s11-i0,l-i0-i3,@WEST-EAST-THROUGH);
        GREEN(l-s11-i0,l-i0-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-s11-i0,l-i0-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i0,l-i0-i1,@WEST-EAST-LEFT);
        GREEN(l-i3-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-i3-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i0,l-i0-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED2);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED3);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED4);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED2);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED3);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED4);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED2);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED3);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED4);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED2);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED3);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED4);
        
        //intersection i1
        //turns
        TURN(l-i2-i1,l-i1-s1);
        TURN(l-i2-i1,l-i1-i0);
        TURN(l-i2-i1,l-i1-i4);
        TURN(l-s1-i1,l-i1-i0);
        TURN(l-s1-i1,l-i1-i4);
        TURN(l-s1-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-i4);
        TURN(l-i0-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-s1);
        TURN(l-i4-i1,l-i1-i2);
        TURN(l-i4-i1,l-i1-s1);
        TURN(l-i4-i1,l-i1-i0);
        //link-to
        LINK-TO(l-i2-i1,i1);
        LINK-TO(l-s1-i1,i1);
        LINK-TO(l-i0-i1,i1);
        LINK-TO(l-i4-i1,i1);
        //link-from
        LINK-FROM(i1,l-i1-i2);
        LINK-FROM(i1,l-i1-s1);
        LINK-FROM(i1,l-i1-i0);
        LINK-FROM(i1,l-i1-i4);
        //phase properties
        PHASE-MIN(i1) = 7;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l-i2-i1,l-i1-i4,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i1,l-i1-i4,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-i4,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i1,l-i1-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i1,l-i1-i2,@WEST-EAST-LEFT);
        GREEN(l-i4-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-i4-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i1,l-i1-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED2);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED3);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED4);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED2);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED3);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED4);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED2);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED3);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED4);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED2);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED3);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED4);
        
        //intersection i2
        //turns
        TURN(l-s3-i2,l-i2-s2);
        TURN(l-s3-i2,l-i2-i1);
        TURN(l-s3-i2,l-i2-i5);
        TURN(l-s2-i2,l-i2-i1);
        TURN(l-s2-i2,l-i2-i5);
        TURN(l-s2-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-i5);
        TURN(l-i1-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-s2);
        TURN(l-i5-i2,l-i2-s3);
        TURN(l-i5-i2,l-i2-s2);
        TURN(l-i5-i2,l-i2-i1);
        //link-to
        LINK-TO(l-s3-i2,i2);
        LINK-TO(l-s2-i2,i2);
        LINK-TO(l-i1-i2,i2);
        LINK-TO(l-i5-i2,i2);
        //link-from
        LINK-FROM(i2,l-i2-s3);
        LINK-FROM(i2,l-i2-s2);
        LINK-FROM(i2,l-i2-i1);
        LINK-FROM(i2,l-i2-i5);
        //phase properties
        PHASE-MIN(i2) = 7;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l-s3-i2,l-i2-i5,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i2,l-i2-i5,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-i5,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i2,l-i2-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i2,l-i2-s3,@WEST-EAST-LEFT);
        GREEN(l-i5-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-i5-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i2,l-i2-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED2);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED3);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED4);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED2);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED3);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED4);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED2);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED3);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED4);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED2);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED3);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED4);
        
        //intersection i3
        //turns
        TURN(l-i4-i3,l-i3-i0);
        TURN(l-i4-i3,l-i3-s10);
        TURN(l-i4-i3,l-i3-i6);
        TURN(l-i0-i3,l-i3-s10);
        TURN(l-i0-i3,l-i3-i6);
        TURN(l-i0-i3,l-i3-i4);
        TURN(l-s10-i3,l-i3-i6);
        TURN(l-s10-i3,l-i3-i4);
        TURN(l-s10-i3,l-i3-i0);
        TURN(l-i6-i3,l-i3-i4);
        TURN(l-i6-i3,l-i3-i0);
        TURN(l-i6-i3,l-i3-s10);
        //link-to
        LINK-TO(l-i4-i3,i3);
        LINK-TO(l-i0-i3,i3);
        LINK-TO(l-s10-i3,i3);
        LINK-TO(l-i6-i3,i3);
        //link-from
        LINK-FROM(i3,l-i3-i4);
        LINK-FROM(i3,l-i3-i0);
        LINK-FROM(i3,l-i3-s10);
        LINK-FROM(i3,l-i3-i6);
        //phase properties
        PHASE-MIN(i3) = 7;
        PHASE-MAX(i3) = 60;
        PHASE-ALL-RED-DUR(i3) = 4;
        //green turns
        GREEN(l-i4-i3,l-i3-i6,@WEST-EAST-LEFT);
        GREEN(l-s10-i3,l-i3-i0,@WEST-EAST-LEFT);
        GREEN(l-i4-i3,l-i3-s10,@WEST-EAST-THROUGH);
        GREEN(l-s10-i3,l-i3-i4,@WEST-EAST-THROUGH);
        GREEN(l-i0-i3,l-i3-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i3,l-i3-s10,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i3,l-i3-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i3,l-i3-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@WEST-EAST-LEFT);
        GREEN(l-i4-i3,l-i3-i0,@WEST-EAST-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i3,l-i3-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i3,l-i3-s10,@WEST-EAST-LEFT);
        GREEN(l-i0-i3,l-i3-s10,@WEST-EAST-THROUGH);
        GREEN(l-i0-i3,l-i3-s10,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i3,l-i3-s10,@NORTH-SOUTH-THROUGH);
        GREEN(l-s10-i3,l-i3-i6,@WEST-EAST-LEFT);
        GREEN(l-s10-i3,l-i3-i6,@WEST-EAST-THROUGH);
        GREEN(l-s10-i3,l-i3-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-s10-i3,l-i3-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i3,l-i3-i4,@WEST-EAST-LEFT);
        GREEN(l-i6-i3,l-i3-i4,@WEST-EAST-THROUGH);
        GREEN(l-i6-i3,l-i3-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i3,l-i3-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED2);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED3);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED4);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED2);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED3);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED4);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED2);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED3);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED4);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED2);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED3);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED4);
        
        //intersection i4
        //turns
        TURN(l-i5-i4,l-i4-i1);
        TURN(l-i5-i4,l-i4-i3);
        TURN(l-i5-i4,l-i4-i7);
        TURN(l-i1-i4,l-i4-i3);
        TURN(l-i1-i4,l-i4-i7);
        TURN(l-i1-i4,l-i4-i5);
        TURN(l-i3-i4,l-i4-i7);
        TURN(l-i3-i4,l-i4-i5);
        TURN(l-i3-i4,l-i4-i1);
        TURN(l-i7-i4,l-i4-i5);
        TURN(l-i7-i4,l-i4-i1);
        TURN(l-i7-i4,l-i4-i3);
        //link-to
        LINK-TO(l-i5-i4,i4);
        LINK-TO(l-i1-i4,i4);
        LINK-TO(l-i3-i4,i4);
        LINK-TO(l-i7-i4,i4);
        //link-from
        LINK-FROM(i4,l-i4-i5);
        LINK-FROM(i4,l-i4-i1);
        LINK-FROM(i4,l-i4-i3);
        LINK-FROM(i4,l-i4-i7);
        //phase properties
        PHASE-MIN(i4) = 7;
        PHASE-MAX(i4) = 60;
        PHASE-ALL-RED-DUR(i4) = 4;
        //green turns
        GREEN(l-i5-i4,l-i4-i7,@WEST-EAST-LEFT);
        GREEN(l-i3-i4,l-i4-i1,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i3,@WEST-EAST-THROUGH);
        GREEN(l-i3-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i1-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i4,l-i4-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i4,l-i4-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i4,l-i4-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i1,@WEST-EAST-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i4,l-i4-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i4,l-i4-i3,@WEST-EAST-LEFT);
        GREEN(l-i1-i4,l-i4-i3,@WEST-EAST-THROUGH);
        GREEN(l-i1-i4,l-i4-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i4,l-i4-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i4,l-i4-i7,@WEST-EAST-LEFT);
        GREEN(l-i3-i4,l-i4-i7,@WEST-EAST-THROUGH);
        GREEN(l-i3-i4,l-i4-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i4,l-i4-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i4,l-i4-i5,@WEST-EAST-LEFT);
        GREEN(l-i7-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i7-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i4,l-i4-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED2);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED3);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED4);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED2);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED3);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED4);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED2);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED3);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED4);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED2);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED3);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED4);
        
        //intersection i5
        //turns
        TURN(l-s4-i5,l-i5-i2);
        TURN(l-s4-i5,l-i5-i4);
        TURN(l-s4-i5,l-i5-i8);
        TURN(l-i2-i5,l-i5-i4);
        TURN(l-i2-i5,l-i5-i8);
        TURN(l-i2-i5,l-i5-s4);
        TURN(l-i4-i5,l-i5-i8);
        TURN(l-i4-i5,l-i5-s4);
        TURN(l-i4-i5,l-i5-i2);
        TURN(l-i8-i5,l-i5-s4);
        TURN(l-i8-i5,l-i5-i2);
        TURN(l-i8-i5,l-i5-i4);
        //link-to
        LINK-TO(l-s4-i5,i5);
        LINK-TO(l-i2-i5,i5);
        LINK-TO(l-i4-i5,i5);
        LINK-TO(l-i8-i5,i5);
        //link-from
        LINK-FROM(i5,l-i5-s4);
        LINK-FROM(i5,l-i5-i2);
        LINK-FROM(i5,l-i5-i4);
        LINK-FROM(i5,l-i5-i8);
        //phase properties
        PHASE-MIN(i5) = 7;
        PHASE-MAX(i5) = 60;
        PHASE-ALL-RED-DUR(i5) = 4;
        //green turns
        GREEN(l-s4-i5,l-i5-i8,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i2,@WEST-EAST-LEFT);
        GREEN(l-s4-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-s4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i5,l-i5-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i5,l-i5-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i5,l-i5-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@WEST-EAST-LEFT);
        GREEN(l-s4-i5,l-i5-i2,@WEST-EAST-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i5,l-i5-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i5,l-i5-i4,@WEST-EAST-LEFT);
        GREEN(l-i2-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i5,l-i5-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i5,l-i5-i8,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i8,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i5,l-i5-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i5,l-i5-s4,@WEST-EAST-LEFT);
        GREEN(l-i8-i5,l-i5-s4,@WEST-EAST-THROUGH);
        GREEN(l-i8-i5,l-i5-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i5,l-i5-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED2);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED3);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED4);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED2);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED3);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED4);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED2);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED3);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED4);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED2);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED3);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED4);
        
        //intersection i6
        //turns
        TURN(l-i7-i6,l-i6-i3);
        TURN(l-i7-i6,l-i6-s9);
        TURN(l-i7-i6,l-i6-s8);
        TURN(l-i3-i6,l-i6-s9);
        TURN(l-i3-i6,l-i6-s8);
        TURN(l-i3-i6,l-i6-i7);
        TURN(l-s9-i6,l-i6-s8);
        TURN(l-s9-i6,l-i6-i7);
        TURN(l-s9-i6,l-i6-i3);
        TURN(l-s8-i6,l-i6-i7);
        TURN(l-s8-i6,l-i6-i3);
        TURN(l-s8-i6,l-i6-s9);
        //link-to
        LINK-TO(l-i7-i6,i6);
        LINK-TO(l-i3-i6,i6);
        LINK-TO(l-s9-i6,i6);
        LINK-TO(l-s8-i6,i6);
        //link-from
        LINK-FROM(i6,l-i6-i7);
        LINK-FROM(i6,l-i6-i3);
        LINK-FROM(i6,l-i6-s9);
        LINK-FROM(i6,l-i6-s8);
        //phase properties
        PHASE-MIN(i6) = 7;
        PHASE-MAX(i6) = 60;
        PHASE-ALL-RED-DUR(i6) = 4;
        //green turns
        GREEN(l-i7-i6,l-i6-s8,@WEST-EAST-LEFT);
        GREEN(l-s9-i6,l-i6-i3,@WEST-EAST-LEFT);
        GREEN(l-i7-i6,l-i6-s9,@WEST-EAST-THROUGH);
        GREEN(l-s9-i6,l-i6-i7,@WEST-EAST-THROUGH);
        GREEN(l-i3-i6,l-i6-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i6,l-i6-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i6,l-i6-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i6,l-i6-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i6,l-i6-i3,@WEST-EAST-LEFT);
        GREEN(l-i7-i6,l-i6-i3,@WEST-EAST-THROUGH);
        GREEN(l-i7-i6,l-i6-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i6,l-i6-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i6,l-i6-s9,@WEST-EAST-LEFT);
        GREEN(l-i3-i6,l-i6-s9,@WEST-EAST-THROUGH);
        GREEN(l-i3-i6,l-i6-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i6,l-i6-s9,@NORTH-SOUTH-THROUGH);
        GREEN(l-s9-i6,l-i6-s8,@WEST-EAST-LEFT);
        GREEN(l-s9-i6,l-i6-s8,@WEST-EAST-THROUGH);
        GREEN(l-s9-i6,l-i6-s8,@NORTH-SOUTH-LEFT);
        GREEN(l-s9-i6,l-i6-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i6,l-i6-i7,@WEST-EAST-LEFT);
        GREEN(l-s8-i6,l-i6-i7,@WEST-EAST-THROUGH);
        GREEN(l-s8-i6,l-i6-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i6,l-i6-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED2);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED3);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED4);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED2);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED3);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED4);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED2);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED3);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED4);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED2);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED3);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED4);
        
        //intersection i7
        //turns
        TURN(l-i8-i7,l-i7-i4);
        TURN(l-i8-i7,l-i7-i6);
        TURN(l-i8-i7,l-i7-s7);
        TURN(l-i4-i7,l-i7-i6);
        TURN(l-i4-i7,l-i7-s7);
        TURN(l-i4-i7,l-i7-i8);
        TURN(l-i6-i7,l-i7-s7);
        TURN(l-i6-i7,l-i7-i8);
        TURN(l-i6-i7,l-i7-i4);
        TURN(l-s7-i7,l-i7-i8);
        TURN(l-s7-i7,l-i7-i4);
        TURN(l-s7-i7,l-i7-i6);
        //link-to
        LINK-TO(l-i8-i7,i7);
        LINK-TO(l-i4-i7,i7);
        LINK-TO(l-i6-i7,i7);
        LINK-TO(l-s7-i7,i7);
        //link-from
        LINK-FROM(i7,l-i7-i8);
        LINK-FROM(i7,l-i7-i4);
        LINK-FROM(i7,l-i7-i6);
        LINK-FROM(i7,l-i7-s7);
        //phase properties
        PHASE-MIN(i7) = 7;
        PHASE-MAX(i7) = 60;
        PHASE-ALL-RED-DUR(i7) = 4;
        //green turns
        GREEN(l-i8-i7,l-i7-s7,@WEST-EAST-LEFT);
        GREEN(l-i6-i7,l-i7-i4,@WEST-EAST-LEFT);
        GREEN(l-i8-i7,l-i7-i6,@WEST-EAST-THROUGH);
        GREEN(l-i6-i7,l-i7-i8,@WEST-EAST-THROUGH);
        GREEN(l-i4-i7,l-i7-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i7,l-i7-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i7,l-i7-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i7,l-i7-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i7,l-i7-i4,@WEST-EAST-LEFT);
        GREEN(l-i8-i7,l-i7-i4,@WEST-EAST-THROUGH);
        GREEN(l-i8-i7,l-i7-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i7,l-i7-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i7,l-i7-i6,@WEST-EAST-LEFT);
        GREEN(l-i4-i7,l-i7-i6,@WEST-EAST-THROUGH);
        GREEN(l-i4-i7,l-i7-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i7,l-i7-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i7,l-i7-s7,@WEST-EAST-LEFT);
        GREEN(l-i6-i7,l-i7-s7,@WEST-EAST-THROUGH);
        GREEN(l-i6-i7,l-i7-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i7,l-i7-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i7,l-i7-i8,@WEST-EAST-LEFT);
        GREEN(l-s7-i7,l-i7-i8,@WEST-EAST-THROUGH);
        GREEN(l-s7-i7,l-i7-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i7,l-i7-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED2);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED3);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED4);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED2);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED3);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED4);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED2);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED3);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED4);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED2);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED3);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED4);
        
        //intersection i8
        //turns
        TURN(l-s5-i8,l-i8-i5);
        TURN(l-s5-i8,l-i8-i7);
        TURN(l-s5-i8,l-i8-s6);
        TURN(l-i5-i8,l-i8-i7);
        TURN(l-i5-i8,l-i8-s6);
        TURN(l-i5-i8,l-i8-s5);
        TURN(l-i7-i8,l-i8-s6);
        TURN(l-i7-i8,l-i8-s5);
        TURN(l-i7-i8,l-i8-i5);
        TURN(l-s6-i8,l-i8-s5);
        TURN(l-s6-i8,l-i8-i5);
        TURN(l-s6-i8,l-i8-i7);
        //link-to
        LINK-TO(l-s5-i8,i8);
        LINK-TO(l-i5-i8,i8);
        LINK-TO(l-i7-i8,i8);
        LINK-TO(l-s6-i8,i8);
        //link-from
        LINK-FROM(i8,l-i8-s5);
        LINK-FROM(i8,l-i8-i5);
        LINK-FROM(i8,l-i8-i7);
        LINK-FROM(i8,l-i8-s6);
        //phase properties
        PHASE-MIN(i8) = 7;
        PHASE-MAX(i8) = 60;
        PHASE-ALL-RED-DUR(i8) = 4;
        //green turns
        GREEN(l-s5-i8,l-i8-s6,@WEST-EAST-LEFT);
        GREEN(l-i7-i8,l-i8-i5,@WEST-EAST-LEFT);
        GREEN(l-s5-i8,l-i8-i7,@WEST-EAST-THROUGH);
        GREEN(l-i7-i8,l-i8-s5,@WEST-EAST-THROUGH);
        GREEN(l-i5-i8,l-i8-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i8,l-i8-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i8,l-i8-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i8,l-i8-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i8,l-i8-i5,@WEST-EAST-LEFT);
        GREEN(l-s5-i8,l-i8-i5,@WEST-EAST-THROUGH);
        GREEN(l-s5-i8,l-i8-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i8,l-i8-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i8,l-i8-i7,@WEST-EAST-LEFT);
        GREEN(l-i5-i8,l-i8-i7,@WEST-EAST-THROUGH);
        GREEN(l-i5-i8,l-i8-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i8,l-i8-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i8,l-i8-s6,@WEST-EAST-LEFT);
        GREEN(l-i7-i8,l-i8-s6,@WEST-EAST-THROUGH);
        GREEN(l-i7-i8,l-i8-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i8,l-i8-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i8,l-i8-s5,@WEST-EAST-LEFT);
        GREEN(l-s6-i8,l-i8-s5,@WEST-EAST-THROUGH);
        GREEN(l-s6-i8,l-i8-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i8,l-i8-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED2);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED3);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED4);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED2);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED3);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED4);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED2);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED3);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED4);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED2);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED3);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED4);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t28);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        TIME-VAL(t25) = 25;
        TIME-VAL(t26) = 26;
        TIME-VAL(t27) = 27;
        TIME-VAL(t28) = 28;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
        NEXT(t8,t9);
        NEXT(t9,t10);
        NEXT(t10,t11);
        NEXT(t11,t12);
        NEXT(t12,t13);
        NEXT(t13,t14);
        NEXT(t14,t15);
        NEXT(t15,t16);
        NEXT(t16,t17);
        NEXT(t17,t18);
        NEXT(t18,t19);
        NEXT(t19,t20);
        NEXT(t20,t21);
        NEXT(t21,t22);
        NEXT(t22,t23);
        NEXT(t23,t24);
        NEXT(t24,t25);
        NEXT(t25,t26);
        NEXT(t26,t27);
        NEXT(t27,t28);
        //cartesian coordinates (for visualization)
        X(i0) = 342.0; Y(i0) = 703.0;
        X(i1) = 590.0; Y(i1) = 703.0;
        X(i2) = 755.0; Y(i2) = 703.0;
        X(i3) = 342.0; Y(i3) = 463.0;
        X(i4) = 590.0; Y(i4) = 463.0;
        X(i5) = 755.0; Y(i5) = 463.0;
        X(i6) = 342.0; Y(i6) = 274.0;
        X(i7) = 590.0; Y(i7) = 274.0;
        X(i8) = 755.0; Y(i8) = 274.0;
        SOURCE-X(l-s11-i0) = 0.0; SOURCE-Y(l-s11-i0) = 703.0;
        SOURCE-X(l-s3-i2) = 1120.0; SOURCE-Y(l-s3-i2) = 703.0;
        SINK-X(l-i0-s11) = 0.0; SINK-Y(l-i0-s11) = 703.0;
        SINK-X(l-i2-s3) = 1120.0; SINK-Y(l-i2-s3) = 703.0;
        SOURCE-X(l-s10-i3) = 0.0; SOURCE-Y(l-s10-i3) = 463.0;
        SOURCE-X(l-s4-i5) = 1120.0; SOURCE-Y(l-s4-i5) = 463.0;
        SINK-X(l-i3-s10) = 0.0; SINK-Y(l-i3-s10) = 463.0;
        SINK-X(l-i5-s4) = 1120.0; SINK-Y(l-i5-s4) = 463.0;
        SOURCE-X(l-s9-i6) = 0.0; SOURCE-Y(l-s9-i6) = 274.0;
        SOURCE-X(l-s5-i8) = 1120.0; SOURCE-Y(l-s5-i8) = 274.0;
        SINK-X(l-i6-s9) = 0.0; SINK-Y(l-i6-s9) = 274.0;
        SINK-X(l-i8-s5) = 1120.0; SINK-Y(l-i8-s5) = 274.0;
        SOURCE-X(l-s0-i0) = 342.0; SOURCE-Y(l-s0-i0) = 1068.0;
        SOURCE-X(l-s8-i6) = 342.0; SOURCE-Y(l-s8-i6) = 0.0;
        SINK-X(l-i0-s0) = 342.0; SINK-Y(l-i0-s0) = 1068.0;
        SINK-X(l-i6-s8) = 342.0; SINK-Y(l-i6-s8) = 0.0;
        SOURCE-X(l-s1-i1) = 590.0; SOURCE-Y(l-s1-i1) = 1068.0;
        SOURCE-X(l-s7-i7) = 590.0; SOURCE-Y(l-s7-i7) = 0.0;
        SINK-X(l-i1-s1) = 590.0; SINK-Y(l-i1-s1) = 1068.0;
        SINK-X(l-i7-s7) = 590.0; SINK-Y(l-i7-s7) = 0.0;
        SOURCE-X(l-s2-i2) = 755.0; SOURCE-Y(l-s2-i2) = 1068.0;
        SOURCE-X(l-s6-i8) = 755.0; SOURCE-Y(l-s6-i8) = 0.0;
        SINK-X(l-i2-s2) = 755.0; SINK-Y(l-i2-s2) = 1068.0;
        SINK-X(l-i8-s6) = 755.0; SINK-Y(l-i8-s6) = 0.0;
    };
}

instance network_3x3 {
    domain = BLX_model;
    non-fluents = network_3x3;
    max-nondef-actions = 9;
    horizon = 200;
    discount = 1.0;
}
// Source link ids
//l-s0-i0=36
//l-s8-i6=37
//l-s1-i1=38
//l-s7-i7=39
//l-s2-i2=40
//l-s6-i8=41
//l-s11-i0=42
//l-s3-i2=43
//l-s10-i3=44
//l-s4-i5=45
//l-s9-i6=46
//l-s5-i8=47