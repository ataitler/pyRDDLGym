// Linear inventory control problem

domain inventory {

	types {
		item : object;
	};

	pvariables {
		
		CAP : { non-fluent, int, default = 10 };
		C(item) : { non-fluent, real, default = 0.5 };
		P(item) : { non-fluent, real, default = 2.0 };
		
		MEAN(item) : { non-fluent, real, default = 4.0 };
		DISP(item) : { non-fluent, real, default = 2.0 };
		
		demand(item) : { interm-fluent, int }; 
		order-act(item) : { interm-fluent, int };
			
		stock(item) : { state-fluent, int, default = 0 };
	
		order(item) : { action-fluent, int, default = 0 };
	};

	cpfs {	
		order-act(?i) = max[0, min[order(?i), CAP]];
		demand(?i) = floor[Uniform(MEAN(?i) - DISP(?i), MEAN(?i) + DISP(?i))];
		stock'(?i) = stock(?i) + order-act(?i) - demand(?i);		
	};

	reward = (sum_{?i : item} [(-C(?i)) * order-act(?i) + (-P(?i)) * abs[stock'(?i)]]);

	action-preconditions {
	};
	
	state-invariants {
	};
}